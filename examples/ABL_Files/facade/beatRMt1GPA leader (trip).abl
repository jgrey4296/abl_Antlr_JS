// trip bRMt1GPA.abl

// flags in use:  
// bRMt1_PlayerWasInvitedToCouch
// bRMt1_StartedGuessingGame
// bRMt1_PlayerOntoSecondGuess
// bRMt1_MentionedSecondHoneymoon

// note that in this beat, trip looks at the armoire when he intends to look at Grace near the couch
// this is because the performance looks better this way



// ############
joint sequential behavior BeatInit() { teammembers Trip Grace;
	precondition { StoryMemory (StoryStatusWME currentBeat == eBeatID_RockyMarriage_GPA_T1) } 
	
	WorkingMemory beatMemory;

	mental_act { StringUtil.println("*******"); }
	mental_act { StringUtil.println("*******"); }

	mental_act { StringUtil.println("Trip initting bRMt1GPA"); }
	mental_act { NativeAnimationInterface.addEventInfoToLog("**** Trip initting bRMt1GPA ****"); }

	mental_act { StringUtil.println("*******"); }
	mental_act { StringUtil.println("*******"); }

	// establish beatgoal wmes
	mental_act { 
		beatMemory = WorkingMemory.lookupRegisteredMemory("BeatMemory");	
		beatMemory.deleteAllWMEClass("BeatGoalStatusWME"); 
		beatMemory.addWME(new BeatGoalStatusWME(sig_bRMt1GPA_bgTxnIn_Default, false, false, false)); 
		beatMemory.addWME(new BeatGoalStatusWME(sig_bRMt1GPA_bgTxnIn_ReferTo, false, false, false)); 
		beatMemory.addWME(new BeatGoalStatusWME(sig_bRMt1GPA_bgLurePlayer, false, false, false)); 
		beatMemory.addWME(new BeatGoalStatusWME(sig_bRMt1GPA_bgLurePlayer2, false, false, false)); 
		beatMemory.addWME(new BeatGoalStatusWME(sig_bRMt1GPA_bgLurePlayer3, false, false, false)); 
		beatMemory.addWME(new BeatGoalStatusWME(sig_bRMt1GPA_bgStartGuessingGame_pre, false, false, false)); 
		beatMemory.addWME(new BeatGoalStatusWME(sig_bRMt1GPA_bgStartGuessingGame, false, false, false)); 
		beatMemory.addWME(new BeatGoalStatusWME(sig_bRMt1GPA_bgMixin_MoreThanAWord, false, false, false)); 
		beatMemory.addWME(new BeatGoalStatusWME(sig_bRMt1GPA_bgMixin_WrongSingleWord, false, false, false)); 
		beatMemory.addWME(new BeatGoalStatusWME(sig_bRMt1GPA_bgMixin_FirstGuessTimeout, false, false, false)); 
		beatMemory.addWME(new BeatGoalStatusWME(sig_bRMt1GPA_bgMixin_TellMeMore, false, false, false)); 
		beatMemory.addWME(new BeatGoalStatusWME(sig_bRMt1GPA_bgMixin_LookAndIgnore, false, false, false)); 
		beatMemory.addWME(new BeatGoalStatusWME(sig_bRMt1GPA_bgWaitTimeout, false, false, false)); 
		beatMemory.addWME(new BeatGoalStatusWME(sig_bRMt1GPA_bgTxnOut_WrongAnswer, false, false, false)); 
		beatMemory.addWME(new BeatGoalStatusWME(sig_bRMt1GPA_bgTxnOut_WrongAnswer_p2, false, false, false)); 
		beatMemory.addWME(new BeatGoalStatusWME(sig_bRMt1GPA_bgTxnOut_LeanToTPA_RightAnswer, false, false, false)); 
		beatMemory.addWME(new BeatGoalStatusWME(sig_bRMt1GPA_bgTxnOut_LeanToTPA_RightAnswer_p2, false, false, false)); 
		beatMemory.addWME(new BeatGoalStatusWME(sig_bRMt1GPA_bgTxnOut_PlayerNotAtPicture, false, false, false)); 
		beatMemory.addWME(new BeatGoalStatusWME(sig_bRMt1GPA_bgTxnOut_PlayerNotAtPicture_p2, false, false, false)); 
		beatMemory.addWME(new BeatGoalStatusWME(sig_bRMt1GPA_bgTxnOut_PlayerNotAtPicture_p3, false, false, false)); 
	}

	subgoal SetMonitorPlayerBehavior(true, true, true);

	subgoal SetDAHandlersActive(true);	
	subgoal ActivateContext(context_GlobalMixin, cContextPriority_global);			
	subgoal ActivateContext(context_RM_PlayerNotAtPicture, cContextPriority_beat);	// one rule to handle if the player is not at the picture
	// allow object mixins to trump mild beat rxns!
	subgoal DeactivateContextPriorityMap(contextPriorityMap_GlobalTrumpsBeat);
	subgoal ActivateContextPriorityMap(contextPriorityMap_GlobalTrumpsBeat_obj);
	subgoal SetCentricCharacter(grace);

	// set which object refs should not be able to cause a pushtoofar during this beat
	subgoal ClearAllPushTooFarObjExclusions();
	subgoal ExcludePushTooFarObj(eDAObjectParam_italyPicture);

	// create beat wme if doesn't exist, and update it
	with (ignore_failure) subgoal CreateBeatRMp1WME();

	subgoal SetItRefAndDefault(eDAObjectParam_italyPicture);

	spawngoal TurnOffLocalPhysicallyFavor(eBeatID_RockyMarriage_GPA_T1, -1);
}


// ############
sequential behavior BeatCleanup(int beatID) {
	precondition { (beatID == eBeatID_RockyMarriage_GPA_T1) 
					{ BeatMemory bsWME = (BeatStatusWME) }
					{ StoryMemory pbmWME = (PostBeatMixinInfoWME) } }
	specificity 2;
	int defaultPBM;
	mental_act {
		StringUtil.println("BeatCleanup eBeatID_RockyMarriage_GPA_T1"); 
		defaultPBM = -1;

		// if no postbeatmixin has been set, but we reached the beat gist,
		// set a default postbeatmixin
		if (pbmWME.getBRM_Italy() == false &&
				bsWME.getGistPointReached() == true) {
			defaultPBM = ePostBeatMixinID_RockyMarriageT1_PlayerNotAtPicture;
		}
	}
	with (ignore_failure) subgoal BeatCleanup_SetDefaultPostBeatMixin(defaultPBM);
	subgoal DeactivateContext(context_RM_PlayerNotAtPicture);
	subgoal DeactivateContext(context_RM_ItalyGuessingGame);
	subgoal DeactivateContext(context_DuringTxnOut);
	subgoal TurnOnLocalPhysicallyFavorWithTimeout(beatID, -1); 
}


// ############
parallel behavior BeatGoals_Body() {
	precondition { StoryMemory (StoryStatusWME currentBeat == eBeatID_RockyMarriage_GPA_T1) } 

	with (priority 7)						subgoal bRMt1GPA_ChooseTxnIn(); 

	with (priority 6, post,
			persistent when_fails, 
			property isAmbFixdrinkoptSafe true,
			property isBeatGoal true)		subgoal bRMt1GPA_bgLurePlayer();	

	with (priority 5, post,
			persistent when_fails, 
			property isAmbFixdrinkoptSafe true,
			property isBeatGoal true)		subgoal bRMt1GPA_bgLurePlayer2();	

	with (priority 4, post,
			persistent when_fails, 
			property isAmbFixdrinkoptSafe true,
			property isBeatGoal true)		subgoal bRMt1GPA_bgLurePlayer3();	

	with (priority 3, post,
			persistent when_fails, 
			property isAmbFixdrinkoptSafe true,
			property isBeatGoal true)		subgoal bRMt1GPA_bgStartGuessingGame_pre();	

	with (priority 2, post,
			persistent when_fails, 
			property isAmbFixdrinkoptSafe true,
			property isBeatGoal true)		subgoal bRMt1GPA_bgStartGuessingGame();	

	with (priority 1, post,
			persistent when_fails, 
			property isBeatGoal true)		subgoal bRMt1GPA_bgWaitTimeout();

	with (priority 0)						subgoal LastBeatGoalForThisBeat();

	// for testing
	//with (priority 6, post, persistent when_fails, property isBeatGoal true) 
	// subgoal bRMt1GPA_bgMixin_TellMeMore();	
	//with (priority 2, post, persistent when_fails, property isTxnOutBeatGoal true, property isBeatGoal true) 
	// subgoal bRMt1GPA_bgTxnOut_PlayerNotAtPicture();	
}


// ############
sequential behavior bRMt1GPA_ChooseTxnIn() {
	precondition { BeatMemory (BeatArgumentWME txnInType :: txnInType)
			(txnInType == eBeatArgument_txnIn_Default || 
			 txnInType == eBeatArgument_txnIn_Redirect) }
	specificity 2;
	with (persistent when_fails, property isBeatGoal true, 
			property isAmbSafe true,
			post)								subgoal bRMt1GPA_bgTxnIn_Default(); 
}
sequential behavior bRMt1GPA_ChooseTxnIn() {
	precondition { BeatMemory (BeatArgumentWME txnInType == eBeatArgument_txnIn_ReferTo) }	
	specificity 2;
	with (persistent when_fails, property isBeatGoal true, 
			property isAmbSafe true,
			post)								subgoal bRMt1GPA_bgTxnIn_ReferTo(); 
}
sequential behavior bRMt1GPA_ChooseTxnIn() {
	precondition { BeatMemory (BeatArgumentWME txnInType :: txnInType) }	
	specificity 1;
	mental_act { assert false : ("unknown txnin " + txnInType); }
}


// ############
// Different types of reactions to the chosen discourse act

// ## MixinBeforeBeatGist -- MoreThanAWord
sequential behavior handlerDA_DoReaction() {
	precondition {	{ StoryMemory (StoryStatusWME currentBeat == eBeatID_RockyMarriage_GPA_T1) } 
					(ReactionWME rxnType == eDARxnType_MixinBeforeBeatGist  param1 == eDARxnParam_GuessingGame_MoreThanAWord) }
	specificity 3;
	mental_act { StringUtil.println("bRMt1GPA_handlerDA_DoReaction_MixinBBG_MoreThanAWord"); }
	with (ignore_failure) subgoal bRMt1GPA_handlerDA_DoReaction_MixinBBG_MoreThanAWord();
}
// if we've already made a guess, then do TxnOut_WrongAnswer
sequential behavior bRMt1GPA_handlerDA_DoReaction_MixinBBG_MoreThanAWord() {
	precondition {	{ StoryMemory	(BeatFlagWME sVal == "bRMt1_PlayerOntoSecondGuess") }
					beatGoals_Body = (ParallelBehaviorWME signature == "BeatGoals_Body()") }
	specificity 2;

	// ## succeed all current beatgoals away
	// LastBeatGoalForThisBeat() exists, so we can delete all the other beatgoals and not lose BeatGoals_Body()
	subgoal SucceedAllBeatGoalsAndSuspendBeatGoals();

	with (persistent when_fails, property isTxnOutBeatGoal true, property isBeatGoal true, post, priority 10) 
		spawngoal bRMt1GPA_bgTxnOut_WrongAnswer() at beatGoals_Body; 
	with (persistent when_fails, property isTxnOutBeatGoal true, property isBeatGoal true, post, priority 9) 
		spawngoal bRMt1GPA_bgTxnOut_WrongAnswer_p2() at beatGoals_Body; 
	subgoal UnsuspendBeatGoals();
}
// otherwise, do the mixin
sequential behavior bRMt1GPA_handlerDA_DoReaction_MixinBBG_MoreThanAWord() {
	precondition {	beatGoals_Body = (ParallelBehaviorWME signature == "BeatGoals_Body()") }
	specificity 1;
	subgoal AbortBeatGoalIntPAndSuspendBeatGoals();
	with (ignore_failure, property isMixinBeatGoal true, property isBeatGoal true, post, priority 15) 
		spawngoal bRMt1GPA_bgMixin_MoreThanAWord() at beatGoals_Body; 
	subgoal UnsuspendBeatGoals();
}


// ## MixinBeforeBeatGist -- WrongSingleWord
sequential behavior handlerDA_DoReaction() {
	precondition {	{ StoryMemory (StoryStatusWME currentBeat == eBeatID_RockyMarriage_GPA_T1) } 
					(ReactionWME rxnType == eDARxnType_MixinBeforeBeatGist  param1 == eDARxnParam_GuessingGame_WrongSingleWord) }
	specificity 3;
	mental_act { StringUtil.println("bRMt1GPA_handlerDA_DoReaction_MixinBBG_WrongSingleWord"); }
	with (ignore_failure) subgoal bRMt1GPA_handlerDA_DoReaction_MixinBBG_WrongSingleWord();
}
// if we've already made a guess, then do TxnOut_WrongAnswer
sequential behavior bRMt1GPA_handlerDA_DoReaction_MixinBBG_WrongSingleWord() {
	precondition {	{ StoryMemory	(BeatFlagWME sVal == "bRMt1_PlayerOntoSecondGuess") }
					beatGoals_Body = (ParallelBehaviorWME signature == "BeatGoals_Body()") }
	specificity 2;

	// ## succeed all current beatgoals away
	// LastBeatGoalForThisBeat() exists, so we can delete all the other beatgoals and not lose BeatGoals_Body()
	subgoal SucceedAllBeatGoalsAndSuspendBeatGoals();

	with (persistent when_fails, property isTxnOutBeatGoal true, property isBeatGoal true, post, priority 10) 
		spawngoal bRMt1GPA_bgTxnOut_WrongAnswer() at beatGoals_Body; 
	with (persistent when_fails, property isTxnOutBeatGoal true, property isBeatGoal true, post, priority 9) 
		spawngoal bRMt1GPA_bgTxnOut_WrongAnswer_p2() at beatGoals_Body; 
	subgoal UnsuspendBeatGoals();
}
// otherwise, do the mixin
sequential behavior bRMt1GPA_handlerDA_DoReaction_MixinBBG_WrongSingleWord() {
	precondition {	beatGoals_Body = (ParallelBehaviorWME signature == "BeatGoals_Body()") }
	specificity 1;
	subgoal AbortBeatGoalIntPAndSuspendBeatGoals();
	with (ignore_failure, property isMixinBeatGoal true, property isBeatGoal true, post, priority 15) 
		spawngoal bRMt1GPA_bgMixin_WrongSingleWord() at beatGoals_Body; 
	subgoal UnsuspendBeatGoals();
}


// ## MixinBeforeBeatGist -- FirstGuessTimeout
sequential behavior handlerDA_DoReaction() {
	precondition {	{ StoryMemory (StoryStatusWME currentBeat == eBeatID_RockyMarriage_GPA_T1) } 
					(ReactionWME rxnType == eDARxnType_MixinBeforeBeatGist  param1 == eDARxnParam_GuessingGame_FirstGuessTimeout) }
	specificity 3;
	mental_act { StringUtil.println("bRMt1GPA_handlerDA_DoReaction_MixinBBG_FirstGuessTimeout"); }
	with (ignore_failure) subgoal bRMt1GPA_handlerDA_DoReaction_MixinBBG_FirstGuessTimeout();
}
// if we've already made a guess, then do TxnOut_WrongAnswer
sequential behavior bRMt1GPA_handlerDA_DoReaction_MixinBBG_FirstGuessTimeout() {
	precondition {	{ StoryMemory	(BeatFlagWME sVal == "bRMt1_PlayerOntoSecondGuess") }
					beatGoals_Body = (ParallelBehaviorWME signature == "BeatGoals_Body()") }
	specificity 2;

	// ## succeed all current beatgoals away
	// LastBeatGoalForThisBeat() exists, so we can delete all the other beatgoals and not lose BeatGoals_Body()
	subgoal SucceedAllBeatGoalsAndSuspendBeatGoals();

	with (persistent when_fails, property isTxnOutBeatGoal true, property isBeatGoal true, post, priority 10) 
		spawngoal bRMt1GPA_bgTxnOut_WrongAnswer() at beatGoals_Body; 
	with (persistent when_fails, property isTxnOutBeatGoal true, property isBeatGoal true, post, priority 9) 
		spawngoal bRMt1GPA_bgTxnOut_WrongAnswer_p2() at beatGoals_Body; 
	subgoal UnsuspendBeatGoals();
}
// otherwise, do the mixin
sequential behavior bRMt1GPA_handlerDA_DoReaction_MixinBBG_FirstGuessTimeout() {
	precondition {	beatGoals_Body = (ParallelBehaviorWME signature == "BeatGoals_Body()") }
	specificity 1;
	subgoal AbortBeatGoalIntPAndSuspendBeatGoals();
	with (ignore_failure, property isMixinBeatGoal true, property isBeatGoal true, post, priority 15) 
		spawngoal bRMt1GPA_bgMixin_FirstGuessTimeout() at beatGoals_Body; 
	subgoal UnsuspendBeatGoals();
}


// ## Mixin -- TellMeMore
sequential behavior handlerDA_DoReaction() {
	precondition { { StoryMemory (StoryStatusWME currentBeat == eBeatID_RockyMarriage_GPA_T1) } 
					(ReactionWME rxnType == eDARxnType_TellMeMoreAbout  param1 :: param1) }
	specificity 3;
	mental_act { StringUtil.println("bRMt1GPA_handlerDA_DoReaction_TellMeMore"); }
	with (ignore_failure) subgoal handlerDA_Body_RecordReactionInfo();	// record that this reaction is happening
	subgoal AbortBeatGoalIntPAndSuspendBeatGoals();
	with (ignore_failure) subgoal bRMt1GPA_handlerDA_DoReaction_TellMeMore();
	subgoal UnsuspendBeatGoals();
}
// if done it before, do deflreest
sequential behavior bRMt1GPA_handlerDA_DoReaction_TellMeMore() {
	precondition {	{ BeatMemory (BeatGoalStatusWME bgSig == sig_bRMt1GPA_bgMixin_TellMeMore  bCommitPointReached == true) }
					beatGoals_Body = (ParallelBehaviorWME signature == "BeatGoals_Body()") }
	specificity 2;
	with (ignore_failure, property isMixinBeatGoal true, property isBeatGoal true, post, priority 15) 
		spawngoal Global_bgMixin_DeflectRxn(eDARxnParam_Deflect_WantMore, me) at beatGoals_Body; 
}
// otherwise do the mixin
sequential behavior bRMt1GPA_handlerDA_DoReaction_TellMeMore() {
	precondition {	beatGoals_Body = (ParallelBehaviorWME signature == "BeatGoals_Body()") }
	specificity 1;
	with (ignore_failure, property isMixinBeatGoal true, property isBeatGoal true, post, priority 15) 
		spawngoal bRMt1GPA_bgMixin_TellMeMore() at beatGoals_Body; 
}


// ## TxnOut -- LeanToTPA_RightAnswer -- uses eTxnOut_MildAgreement
sequential behavior handlerDA_DoReaction() {
	precondition { { StoryMemory (StoryStatusWME currentBeat == eBeatID_RockyMarriage_GPA_T1) } 
					(ReactionWME rxnType == eDARxnType_TxnOut  param1 == eTxnOut_MildAgreement) }
	specificity 3;
	mental_act { StringUtil.println("bRMt1GPA_handlerDA_DoReaction_TxnOut_LeanToTPA_RightAnswer"); }
	subgoal bRMt1GPA_handlerDA_DoReaction_TxnOut_LeanToTPA_RightAnswer();
}
// otherwise do the txn out
sequential behavior bRMt1GPA_handlerDA_DoReaction_TxnOut_LeanToTPA_RightAnswer() {
	precondition { beatGoals_Body = (ParallelBehaviorWME signature == "BeatGoals_Body()") }
	specificity 1;

	mental_act { StringUtil.println("bRMt1GPA_handlerDA_DoReaction_LeanToTPA_RightAnswer"); }

	// ## succeed all current beatgoals away
	// LastBeatGoalForThisBeat() exists, so we can delete all the other beatgoals and not lose BeatGoals_Body()
	subgoal SucceedAllBeatGoalsAndSuspendBeatGoals();

	with (persistent when_fails, property isBeatGoal true, 
		post, property isTxnOutBeatGoal true, priority 10) 
			spawngoal bRMt1GPA_bgTxnOut_LeanToTPA_RightAnswer() at beatGoals_Body; 
	with (persistent when_fails, property isBeatGoal true, 
		post, property isTxnOutBeatGoal true, priority 9) 
			spawngoal bRMt1GPA_bgTxnOut_LeanToTPA_RightAnswer_p2() at beatGoals_Body; 

	subgoal UnsuspendBeatGoals();
}




// ## TxnOut -- PlayerNotAtPicture -- uses eTxnOut_MildDisagreement
sequential behavior handlerDA_DoReaction() {
	precondition { { StoryMemory (StoryStatusWME currentBeat == eBeatID_RockyMarriage_GPA_T1) } 
					(ReactionWME rxnType == eDARxnType_TxnOut  param1 == eTxnOut_MildDisagreement) 
					beatGoals_Body = (ParallelBehaviorWME signature == "BeatGoals_Body()") }
	specificity 3;

	mental_act { StringUtil.println("bRMt1GPA_handlerDA_DoReaction_PlayerNotAtPicture"); }

	// ## succeed all current beatgoals away
	// LastBeatGoalForThisBeat() exists, so we can delete all the other beatgoals and not lose BeatGoals_Body()
	subgoal SucceedAllBeatGoalsAndSuspendBeatGoals();

	with (persistent when_fails, property isBeatGoal true, 
		post, property isTxnOutBeatGoal true, priority 12) 
			spawngoal bRMt1GPA_bgTxnOut_PlayerNotAtPicture() at beatGoals_Body; 
	with (persistent when_fails, property isBeatGoal true, 
		post, property isTxnOutBeatGoal true, priority 11) 
			spawngoal bRMt1GPA_bgTxnOut_PlayerNotAtPicture_p2() at beatGoals_Body; 
	with (persistent when_fails, property isBeatGoal true, 
		post, property isTxnOutBeatGoal true, priority 10) 
			spawngoal bRMt1GPA_bgTxnOut_PlayerNotAtPicture_p3() at beatGoals_Body; 

	subgoal UnsuspendBeatGoals();
}


/* APS 9.11.04: This is absorbing PushTooFar reactions!
// ## No reaction
sequential behavior handlerDA_DoReaction() {
	precondition {	{ StoryMemory (StoryStatusWME currentBeat == eBeatID_RockyMarriage_GPA_T1) } 
					(ReactionWME rxnType :: rxnType  param1 :: param1) }
	specificity 2;
	mental_act { StringUtil.println("handlerDA_DoReaction NO REACTION -- rxnType " + rxnType + " param1 " + param1); }
}
*/


// ---------------------------------------------------------------------
// ---------------------------------------------------------------------
// ---------------------------------------------------------------------
// BEATGOALS


// ############
// bRMt1GPA_bgTxnIn_Default
sequential behavior bRMt1GPA_bgTxnIn_Default() {
	mental_act { StringUtil.println("*** start bRMt1GPA_bgTxnIn_Default"); }
	subgoal SetDeflectModeReest(trip, -1, etripScript_dialog_RMT1GPA_INTERRUPTED_A_BIT_DESPERATE_SMILING_y__yeah_youll_love_this_incredible_italy_photo,
									eFEBase_serious, eMood_neutral, eFEBase_skeptical, eMood_angry, eFEBase_serious, eMood_angry,
									-1, false);
	with (priority 20) spawngoal handlerPauseAfterBeatGoal(sig_bRMt1GPA_bgTxnIn_Default, 0.0f);
	subgoal bRMt1GPA_TxnIn_Default_Body();
	subgoal SetBeatGoalCommitPointReached(); subgoal SetBeatGoalGistPointReached(); subgoal ClearReestablishFlag();
	mental_act { StringUtil.println("*** end bRMt1GPA_bgTxnIn_Default"); }
}

sequential behavior bRMt1GPA_TxnIn_Default_Body() {
	joint subgoal bRMt1GPA_TxnIn_Default_BodyStuff();
	joint subgoal bRMt1GPA_TxnIn_Default_BodyStuff2();
}
sequential behavior bRMt1GPA_TxnIn_Default_Body() {
	precondition { BeatMemory (BeatGoalStatusWME bgSig == sig_bRMt1GPA_bgTxnIn_Default  bCommitPointReached == true) }
	specificity 2;
	joint subgoal bRMt1GPA_TxnIn_REPEAT_BodyStuff();
}

joint parallel behavior bRMt1GPA_TxnIn_Default_BodyStuff() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodStrong, eArmsEmphType_bothRaised,
			startWith, -1,	eGazeType_normal, eSpriteID_italyPicture, eFEBase_hopeful);
	with (priority_modifier 2) subgoal SetMood(eMood_anxious, eMoodStrength_barely, -1, 0); 
	subgoal DoDialog(70, true, etripScript_dialog_RMT1GPA_oh,
						etripScript_dialog_player_CONCERNED,
						etripScript_dialog_RMT1GPA_youve_got_to_take_a_look_at1_this_amazing_photo_from_our_recent_trip_to_italy);
	//subgoal SetLetBeatGoalFinishFlag_opt(true);	
	subgoal bRMt1GPA_TxnIn_Default_BodyStuff_seq();
	
	mental_act {
		ProvocativeContentArchive.archive.AddContent(eProvocativeContentType_SpecificMediumHotEvent, 
														eProvocativeContentParam_Trip_wants_to_show_off_about_his_supposedly_romantic_trip_to_Italy_Grace_is_bugged_by_it_for_some_reason,
														grace,
														eBackstoryCategory_Grace_has_disconnected_herself_from_Trip_always_seems_unsatisfied_distant_even_when_Trip_tries_to_reach_out_RM,
														eBackstoryCategory_Grace_feels_like_their_marriage_is_a_facade_all_for_show_where_is_the_real_feeling__Trip_deep_down_knows_hes_putting_on_a_facade_F,
														eBackstoryCategory_Admitting_that_theyve_had_an_unhappy_marriage_RM);
	}
}

sequential behavior bRMt1GPA_TxnIn_Default_BodyStuff_seq() {
	with (ignore_failure) subgoal DoGaze(70, eGazeType_normal, eSpriteID_italyPicture);
	subgoal WaitFor(1);
	with (ignore_failure) subgoal DoGaze(70, eGazeType_normal, player);
	subgoal WaitFor(1);
	with (ignore_failure) subgoal DoGaze(70, eGazeType_normal, eSpriteID_italyPicture);
	subgoal bRM_WalkToItalyPic();
}


joint parallel behavior bRMt1GPA_TxnIn_Default_BodyStuff2() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, eSpriteID_italyPicture);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodStrong, eArmsEmphType_bothRaised,
			eDcue_DialogBegin, spouse,	eGazeType_normal, eSpriteID_italyPicture,	-1, 
			eDcue_DialogUnderway, spouse, -1, -1,					eFEBase_hopeful);
	with (priority_modifier 2, team_effect_only)
		subgoal SetMoodAtDialogCue(eDcue_DialogUnderway, spouse, eMood_anxious, eMoodStrength_barely, -1, 0); 
	subgoal bRMt1GPA_TxnIn_Default_BodyStuff2_seq();
}
sequential behavior bRMt1GPA_TxnIn_Default_BodyStuff2_seq() {
	subgoal WaitFor(2.5f);
	subgoal DoDialog(70, true, etripScript_dialog_RMT1GPA_no_grace_our1_friend_will_love_this);
}

joint parallel behavior bRMt1GPA_TxnIn_REPEAT_BodyStuff() { teammembers Trip Grace; 
	subgoal bRM_WalkToItalyPic();
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodMild, eArmsEmphType_bothRaised,
			startWith, -1,	eGazeType_normal, eSpriteID_italyPicture, eFEBase_hopeful);
	with (priority_modifier 2) subgoal SetMood(eMood_anxious, eMoodStrength_barely, -1, 0); 
	subgoal DoDialog(70, true, etripScript_dialog_RMT1GPA_WALKING_i_was_saying_that_theres_this_picture_from_our_recent_trip_to_italy);
	subgoal SetLetBeatGoalFinishFlag_opt(true);	
}


// ############
// bRMt1GPA_bgTxnIn_ReferTo
sequential behavior bRMt1GPA_bgTxnIn_ReferTo() {
	mental_act { StringUtil.println("*** start bRMt1GPA_bgTxnIn_ReferTo"); }
	subgoal SetDeflectModeReest(trip, -1, etripScript_dialog_RMT1GPA_INTERRUPTED_A_BIT_DESPERATE_SMILING_y__yeah_youll_love_this_incredible_italy_photo,
									eFEBase_serious, eMood_neutral, eFEBase_skeptical, eMood_angry, eFEBase_serious, eMood_angry,
									-1, false);
	with (priority 20) spawngoal handlerPauseAfterBeatGoal(sig_bRMt1GPA_bgTxnIn_ReferTo, 0.0f);
	subgoal bRMt1GPA_TxnIn_ReferTo_Body();
	subgoal SetBeatGoalCommitPointReached(); subgoal SetBeatGoalGistPointReached(); subgoal ClearReestablishFlag();
	mental_act { StringUtil.println("*** end bRMt1GPA_bgTxnIn_ReferTo"); }
}

sequential behavior bRMt1GPA_TxnIn_ReferTo_Body() {
	joint subgoal bRMt1GPA_TxnIn_ReferTo_BodyStuff();
	joint subgoal bRMt1GPA_TxnIn_ReferTo_BodyStuff2();
}
sequential behavior bRMt1GPA_TxnIn_ReferTo_Body() {
	precondition { BeatMemory (BeatGoalStatusWME bgSig == sig_bRMt1GPA_bgTxnIn_ReferTo  bCommitPointReached == true) }
	specificity 2;
	joint subgoal bRMt1GPA_TxnIn_REPEAT_BodyStuff();
}

joint parallel behavior bRMt1GPA_TxnIn_ReferTo_BodyStuff() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodStrong, eArmsEmphType_bothRaised,
			startWith, -1,	eGazeType_normal, eSpriteID_italyPicture, eFEBase_hopeful);
	with (priority_modifier 2) subgoal SetMood(eMood_anxious, eMoodStrength_barely, -1, 0); 
	subgoal DoDialog(70, true, etripScript_dialog_RMT1GPA_yeah_youve_got_to_take_a_look_at1_this_amazing_photo_from_our_recent_trip_to_italy);
	//subgoal SetLetBeatGoalFinishFlag_opt(true);	
	subgoal bRMt1GPA_TxnIn_Default_BodyStuff_seq();
	
	mental_act {
		ProvocativeContentArchive.archive.AddContent(eProvocativeContentType_SpecificMediumHotEvent, 
														eProvocativeContentParam_Trip_wants_to_show_off_about_his_supposedly_romantic_trip_to_Italy_Grace_is_bugged_by_it_for_some_reason,
														grace,
														eBackstoryCategory_Grace_has_disconnected_herself_from_Trip_always_seems_unsatisfied_distant_even_when_Trip_tries_to_reach_out_RM,
														eBackstoryCategory_Grace_feels_like_their_marriage_is_a_facade_all_for_show_where_is_the_real_feeling__Trip_deep_down_knows_hes_putting_on_a_facade_F,
														eBackstoryCategory_Admitting_that_theyve_had_an_unhappy_marriage_RM);
	}
}



joint parallel behavior bRMt1GPA_TxnIn_ReferTo_BodyStuff2() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, eSpriteID_italyPicture);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodStrong, eArmsEmphType_bothRaised,
			eDcue_DialogBegin, spouse,	eGazeType_normal, eSpriteID_italyPicture,	-1, 
			eDcue_DialogUnderway, spouse, -1, -1,					eFEBase_hopeful);
	with (priority_modifier 2, team_effect_only)
		subgoal SetMoodAtDialogCue(eDcue_DialogUnderway, spouse, eMood_anxious, eMoodStrength_barely, -1, 0); 
	subgoal bRMt1GPA_TxnIn_ReferTo_BodyStuff2_seq();
}
sequential behavior bRMt1GPA_TxnIn_ReferTo_BodyStuff2_seq() {
	subgoal WaitFor(2.5f);
	subgoal DoDialog(70, true, etripScript_dialog_RMT1GPA_no_grace_our1_friend_will_love_this);
}



// ############
// bRMt1GPA_bgLurePlayer
sequential behavior bRMt1GPA_bgLurePlayer() {
	mental_act { StringUtil.println("*** start bRMt1GPA_bgLurePlayer"); }
	subgoal SetDeflectModeReest(trip, -1, etripScript_dialog_RMT1N_INTERRUPTED_SMILING_y__yeah_come_here,
									eFEBase_serious, eMood_neutral, eFEBase_skeptical, eMood_angry, eFEBase_serious, eMood_angry,
									-1, false);
	with (priority 20) spawngoal handlerPauseAfterBeatGoal(sig_bRMt1GPA_bgLurePlayer, 0.0f);
	subgoal bRMt1GPA_LurePlayer_Body();
	subgoal SetBeatGoalCommitPointReached(); subgoal SetBeatGoalGistPointReached(); subgoal ClearReestablishFlag();
	mental_act { StringUtil.println("*** end bRMt1GPA_bgLurePlayer"); }
}

// ############
// bRMt1GPA_bgLurePlayer2 -- uses same body as bRMt1N_bgLurePlayer()
sequential behavior bRMt1GPA_bgLurePlayer2() {
	mental_act { StringUtil.println("*** start bRMt1GPA_bgLurePlayer2"); }
	subgoal SetDeflectModeReest(trip, -1, etripScript_dialog_RMT1N_INTERRUPTED_SMILING_y__yeah_come_take_a_look,
									eFEBase_serious, eMood_neutral, eFEBase_skeptical, eMood_angry, eFEBase_serious, eMood_angry,
									-1, false);
	with (priority 20) spawngoal handlerPauseAfterBeatGoal(sig_bRMt1GPA_bgLurePlayer2, 0.0f);
	subgoal bRMt1GPA_LurePlayer_Body();
	subgoal SetBeatGoalCommitPointReached(); subgoal SetBeatGoalGistPointReached(); subgoal ClearReestablishFlag();
	mental_act { StringUtil.println("*** end bRMt1GPA_bgLurePlayer2"); }
}

// ############
// bRMt1GPA_bgLurePlayer3 -- uses same body as bRMt1N_bgLurePlayer()
sequential behavior bRMt1GPA_bgLurePlayer3() {
	mental_act { StringUtil.println("*** start bRMt1GPA_bgLurePlayer3"); }
	subgoal SetDeflectMode(eDeflectMode_minimal);
	with (priority 20) spawngoal handlerPauseAfterBeatGoal(sig_bRMt1GPA_bgLurePlayer3, 0.0f);
	subgoal bRMt1GPA_LurePlayer_Body();
	subgoal SetBeatGoalCommitPointReached(); subgoal SetBeatGoalGistPointReached(); subgoal ClearReestablishFlag();
	mental_act { StringUtil.println("*** end bRMt1GPA_bgLurePlayer3"); }
}

// if the player gets close enough during the lure, we're done
parallel behavior bRMt1GPA_LurePlayer_Body() {
	number_needed_for_success 1;
	with (priority_modifier 1) subgoal bRMt1GPA_LurePlayer_Body_test();
	subgoal bRMt1GPA_LurePlayer_Body_seq();
}

// test that waits for player to come close, and then waits for any letmefinish to be done
sequential behavior bRMt1GPA_LurePlayer_Body_test() {
	with (persistent when_fails) subgoal bRM_LurePlayer_Body_test_p1();
	with (ignore_failure) subgoal DoFullExpressionBase(70, eFEBase_smile);
	with (success_test { BeatMemory (BeatGoalStatusWME	bgSig == sig_bRMt1GPA_bgLurePlayer		
										bLetBeatGoalFinish == false) } ) wait;
}


// first time
sequential behavior bRMt1GPA_LurePlayer_Body_seq() {
	precondition { StoryMemory beatRMp1WME = (BeatRMp1WME numLures == 0) }
	subgoal bRM_WalkToItalyPic();	// just in case
	mental_act { beatRMp1WME.setNumLures(1); }
	joint subgoal bRMt1GPA_LurePlayer_FirstTime_BodyStuff();
	joint subgoal bRMt1GPA_LurePlayer_FirstTime_BodyStuff2();
	joint subgoal bRMt1GPA_LurePlayer_FirstTime_BodyStuff3();
	joint subgoal bRMt1GPA_LurePlayer_FirstTime_BodyStuff4();

	// add DA to cause TxnOut_PlayerNotAtPicture
	subgoal AddDA(eDAType_Misc, eDAMiscParam_playerNotAtPicture);	
}

joint parallel behavior bRMt1GPA_LurePlayer_FirstTime_BodyStuff() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodStrong, eArmsEmphType_bothRaised,
			startWith, -1,	eGazeType_normal, player, eFEBase_hopeful);
	with (priority_modifier 2) subgoal SetMood(eMood_anxious, eMoodStrength_barely, -1, 0); 
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal PerformLittleAction(10, eLittleActionType_react, eLittleActionTone_happy, eLittleActionStrength_barely);
	subgoal DoDialog(70, true, etripScript_dialog_RMT1GPA_TO_PLAYER_GESTURING_AT_PICTURE_so_come1_here_look_at_this_its_great_take2_a_look);
	subgoal SetLetBeatGoalFinishFlag_opt(true);	
}

joint parallel behavior bRMt1GPA_LurePlayer_FirstTime_BodyStuff2() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodStrong, eArmsEmphType_bothRaised,
			startWith, -1,	eGazeType_normal, player, eFEBase_hopeful);
	with (priority_modifier 2) subgoal SetMood(eMood_anxious, eMoodStrength_barely, -1, 0); 
	subgoal WaitFor(3);
}

joint parallel behavior bRMt1GPA_LurePlayer_FirstTime_BodyStuff3() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodStrong, eArmsEmphType_atSide,
			eDcue_DialogBegin, spouse,	eGazeType_normal, eSpriteID_cabinet,	-1, 
			eDcue_DialogUnderway, spouse, -1, -1,					eFEBase_hopeful);
	with (priority_modifier 2, team_effect_only)
		subgoal SetMoodAtDialogCue(eDcue_DialogUnderway, spouse, eMood_anxious, eMoodStrength_barely, -1, 0); 
	succeed_step; //fixme remove when it's safe to have no non-effect_only steps in a behavior 
}

joint parallel behavior bRMt1GPA_LurePlayer_FirstTime_BodyStuff4() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodStrong, eArmsEmphType_atSide,
			startWith, -1,	eGazeType_normal, player, eFEBase_hopeful);
	with (priority_modifier 2) subgoal SetMood(eMood_anxious, eMoodStrength_barely, -1, 0); 
	subgoal WaitFor(3);
}


// second time
sequential behavior bRMt1GPA_LurePlayer_Body_seq() {
	precondition { StoryMemory beatRMp1WME = (BeatRMp1WME numLures == 1) }		
	mental_act { beatRMp1WME.setNumLures(2); }
	joint subgoal bRMt1GPA_LurePlayer_SecondTime_BodyStuff();
	joint subgoal bRMt1GPA_LurePlayer_SecondTime_BodyStuff1b();
	joint subgoal bRMt1GPA_LurePlayer_SecondTime_BodyStuff2();

	// add DA to cause TxnOut_PlayerNotAtPicture
	subgoal AddDA(eDAType_Misc, eDAMiscParam_playerNotAtPicture);	
}

joint parallel behavior bRMt1GPA_LurePlayer_SecondTime_BodyStuff() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodStrong, eArmsEmphType_bothRaised,
			startWith, -1,	eGazeType_normal, player, eFEBase_serious);
	with (priority_modifier 2) subgoal SetMood(eMood_anxious, eMoodStrength_barely, -1, 0); 
	subgoal DoDialog(70, true, etripScript_dialog_player_UPBEAT,
						etripScript_dialog_RMT1GPA_come_on_come_on_take2_a_look_at_this_picture);
	subgoal SetLetBeatGoalFinishFlag_opt(true);	
}

joint parallel behavior bRMt1GPA_LurePlayer_SecondTime_BodyStuff1b() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodStrong, eArmsEmphType_bothRaised,
			eDcue_DialogBegin, spouse,	eGazeType_eyesOnly, eSpriteID_cabinet,	-1, 
			eDcue_DialogUnderway, spouse, -1, -1,					eFEBase_serious);
	with (priority_modifier 2, team_effect_only)
		subgoal SetMoodAtDialogCue(eDcue_DialogUnderway, spouse, eMood_anxious, eMoodStrength_barely, -1, 0); 
	succeed_step; //fixme remove when it's safe to have no non-effect_only steps in a behavior 
}

joint parallel behavior bRMt1GPA_LurePlayer_SecondTime_BodyStuff2() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodStrong, eArmsEmphType_bothRaised,
			startWith, -1,	eGazeType_normal, player, eFEBase_serious);
	with (priority_modifier 2) subgoal SetMood(eMood_anxious, eMoodStrength_barely, -1, 0); 
	subgoal WaitFor(5);
}


// third time
sequential behavior bRMt1GPA_LurePlayer_Body_seq() {
	precondition { StoryMemory (BeatRMp1WME numLures > 1) }		

	// needed to allow the _test() to immediately succeed if it's going to!
	subgoal WaitFor(1);

	// add DA to cause TxnOut_PlayerNotAtPicture
	subgoal AddDA(eDAType_Misc, eDAMiscParam_playerNotAtPicture);	
}


// ############
// bRMt1GPA_bgStartGuessingGame_pre
sequential behavior bRMt1GPA_bgStartGuessingGame_pre() {
	precondition { beatGoals_Body = (ParallelBehaviorWME signature == "BeatGoals_Body()") }

	with (priority 10, ignore_failure) spawngoal bRMt1GPA_Demon_LeaveTrip() at beatGoals_Body;

	mental_act { StringUtil.println("*** start bRMt1GPA_bgStartGuessingGame_pre"); }
	subgoal SetDeflectModeReest(trip, -1, etripScript_dialog_RMT1N_INTERRUPTED_PUZZLED_BROW_KNIT_n__no__w__wait,
									eFEBase_serious, eMood_neutral, eFEBase_skeptical, eMood_angry, eFEBase_serious, eMood_angry,
									-1, false);
	with (priority 20) spawngoal handlerPauseAfterBeatGoal(sig_bRMt1GPA_bgStartGuessingGame_pre, 0.0f);
	subgoal bRMt1GPA_StartGuessingGame_pre_Body();
	subgoal SetBeatGoalCommitPointReached(); subgoal SetBeatGoalGistPointReached(); subgoal ClearReestablishFlag();
	mental_act { StringUtil.println("*** end bRMt1GPA_bgStartGuessingGame_pre"); }
}

sequential behavior bRMt1GPA_StartGuessingGame_pre_Body() {
	joint subgoal bRMt1GPA_StartGuessingGame_pre_BodyStuff();
}

joint parallel behavior bRMt1GPA_StartGuessingGame_pre_BodyStuff() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodMild, eArmsEmphType_bothRaised,
			startWith, -1,	eGazeType_normal, player, eFEBase_hopeful,
			eDcue_DialogBegin, spouse,	eGazeType_normal, eSpriteID_cabinet,	-1);
	subgoal bRMt1GPA_StartGuessingGame_pre_BodyStuff_seq();
}
sequential behavior bRMt1GPA_StartGuessingGame_pre_BodyStuff_seq() {
	subgoal WaitFor(5);
	with (ignore_failure) subgoal DoGaze(70, eGazeType_normal, eSpriteID_cabinet);
	with (priority_modifier 1, ignore_failure)
		subgoal PerformLittleAction(10, eLittleActionType_react, eLittleActionTone_angry, eLittleActionStrength_low);
	subgoal DoDialog(70, true, etripScript_dialog_RMT1GPA_OFFENDED_grace);
	subgoal WaitFor(2.5f);
}


// ############
// bRMt1GPA_bgStartGuessingGame
sequential behavior bRMt1GPA_bgStartGuessingGame() {
	precondition { beatGoals_Body = (ParallelBehaviorWME signature == "BeatGoals_Body()") }

	mental_act { StringUtil.println("*** start bRMt1GPA_bgStartGuessingGame"); }
	subgoal SetDeflectMode(eDeflectMode_minimal);
	with (priority 20) spawngoal handlerPauseAfterBeatGoal(sig_bRMt1GPA_bgStartGuessingGame, 0.0f);
	subgoal bRMt1GPA_StartGuessingGame_Body();
	subgoal SetBeatGoalCommitPointReached(); subgoal SetBeatGoalGistPointReached(); subgoal ClearReestablishFlag();
	mental_act { StringUtil.println("*** end bRMt1GPA_bgStartGuessingGame"); }

	with (priority 10, ignore_failure) spawngoal bRMt1GPA_Demon_FirstGuessTimeout() at beatGoals_Body;
}

sequential behavior bRMt1GPA_StartGuessingGame_Body() {
	joint subgoal bRMt1GPA_StartGuessingGame_BodyStuff();
	joint subgoal bRMt1GPA_StartGuessingGame_BodyStuff3();
	joint subgoal bRMt1GPA_StartGuessingGame_BodyStuff5();
}

joint parallel behavior bRMt1GPA_StartGuessingGame_BodyStuff() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodMild, eArmsEmphType_bothRaised,
			startWith, -1,	eGazeType_normal, player, eFEBase_hopeful,
			eDcue_DialogBegin, spouse,	eGazeType_normal, eSpriteID_cabinet,	-1);
	subgoal bRMt1GPA_StartGuessingGame_BodyStuff_seq();
	subgoal bRMt1_StartGuessingGame_activateContext_seq();
}
sequential behavior bRMt1GPA_StartGuessingGame_BodyStuff_seq() {
	with (ignore_failure) subgoal DoGaze(70, eGazeType_normal, player);
	with (priority_modifier 2) subgoal SetMood(eMood_anxious, eMoodStrength_barely, -1, 0); 
	with (ignore_failure) subgoal DoFullExpressionBase(70, eFEBase_smile);
	subgoal DoDialog(70, true, etripScript_dialog_RMT1GPA_GESTURES_AT_PICTURE_now_now,
						etripScript_dialog_player_NEUTRAL,
						etripScript_dialog_RMT1GPA_what1_does_this_picture_make_you_think_of);
}

joint parallel behavior bRMt1GPA_StartGuessingGame_BodyStuff3() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodMild, eArmsEmphType_bothRaised,
			startWith, -1,	eGazeType_normal, eSpriteID_cabinet, eFEBase_hopeful);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal PerformLittleAction(10, eLittleActionType_react, eLittleActionTone_happy, eLittleActionStrength_barely);
	subgoal bRMt1GPA_StartGuessingGame_BodyStuff3_seq();
}
sequential behavior bRMt1GPA_StartGuessingGame_BodyStuff3_seq() {
	subgoal WaitFor(4);
	with (ignore_failure) subgoal DoGaze(70, eGazeType_normal, player);
	subgoal DoDialog(70, true, etripScript_dialog_RMT1GPA_INTERRUPTING_in_a_word_a_single_word_what1_does_this_say_to_you);
}

joint parallel behavior bRMt1GPA_StartGuessingGame_BodyStuff5() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodMild, eArmsEmphType_bothRaised,
			eDcue_DialogBegin, spouse,	eGazeType_eyesOnly, eSpriteID_cabinet,	eFEBase_impatient);
	subgoal bRMt1GPA_StartGuessingGame_BodyStuff5_seq();
}
sequential behavior bRMt1GPA_StartGuessingGame_BodyStuff5_seq() {
	subgoal WaitFor(4);
	with (priority_modifier 2) subgoal SetMood(eMood_angry, eMoodStrength_barely, -1, 0); 
	with (ignore_failure) subgoal DoGaze(70, eGazeType_normal, eSpriteID_cabinet);
	subgoal DoDialog(70, true, etripScript_dialog_RMT1GPA_TO_GRACE_shh);
	subgoal WaitFor(1);
	with (priority_modifier 2) subgoal SetMood(eMood_anxious, eMoodStrength_barely, -1, 0); 
	with (ignore_failure) subgoal DoGaze(70, eGazeType_normal, player);
	with (ignore_failure) subgoal DoFullExpressionBase(70, eFEBase_hopeful);
}


// ############
// bRMt1GPA_Demon_LeaveTrip
sequential behavior bRMt1GPA_Demon_LeaveTrip() {
	context_condition { !(GoalStepWME isTxnOutBeatGoal != null) }	// die off once a txnOut starts
	with (persistent when_fails) subgoal bRMt1GPA_Demon_LeaveTrip_test();
	mental_act { StringUtil.println("*** bRMt1GPA_Demon_LeaveTrip"); }

	// add DA to cause TxnOut_PlayerNotAtPicture
	subgoal AddDA(eDAType_Misc, eDAMiscParam_playerNotAtPicture);	
}
sequential behavior bRMt1GPA_Demon_LeaveTrip_test() {
	precondition {	(ObjectPositionWME objectID == trip  x :: tripX  z :: tripZ)	
					(ObjectPositionWME objectID == player  x :: playerX  z :: playerZ)
					(Staging.getXZDistanceBetweenPoints(tripX, tripZ, playerX, playerZ) > 150.0f) }
	specificity 2;
	succeed_step;
}
sequential behavior bRMt1GPA_Demon_LeaveTrip_test() {
	specificity 1;
	subgoal WaitFor(1);
	fail_step;
}



// ############
// bRMt1GPA_Demon_FirstGuessTimeout
// if the signature changes, update bRMt1GPA_bgWaitTimeout()
sequential behavior bRMt1GPA_Demon_FirstGuessTimeout() {
	context_condition { !(GoalStepWME isTxnOutBeatGoal != null) 	// die off once a txnOut or mixin starts
						!(GoalStepWME isMixinBeatGoal != null) }
	subgoal WaitFor(5);
	with (ignore_failure) subgoal WaitABitLongerIfPlayerIsTyping(15.0);
	mental_act { StringUtil.println("*** bRMt1GPA_Demon_FirstGuessTimeout"); }

	// add DA to cause Mixin_FirstGuessTimeout
	subgoal AddDA(eDAType_Timeout, -1);	
	wait;	// the context condition will kill us off
}



// ############
// bRMt1GPA_bgMixin_MoreThanAWord
sequential behavior bRMt1GPA_bgMixin_MoreThanAWord() {
	// set flag that player is now onto second guess
	subgoal SetBeatFlagInStoryMemory("bRMt1_PlayerOntoSecondGuess");

	mental_act { StringUtil.println("*** start bRMt1GPA_bgMixin_MoreThanAWord"); }
	with (priority 20) spawngoal SetUninterruptibleUntilSecsAfterDialog(3, gDeflectReestablish);
	with (priority 20) spawngoal handlerPauseAfterBeatGoal(sig_bRMt1GPA_bgMixin_MoreThanAWord, 0.0f);
	subgoal bRMt1GPA_Mixin_MoreThanAWord_Body();
	subgoal SetBeatGoalCommitPointReached(); subgoal SetBeatGoalGistPointReached(); subgoal ClearReestablishFlag();
	mental_act { StringUtil.println("*** end bRMt1GPA_bgMixin_MoreThanAWord"); }
}

sequential behavior bRMt1GPA_Mixin_MoreThanAWord_Body() {
	joint subgoal bRMt1GPA_Mixin_MoreThanAWord_BodyStuff();
	joint subgoal bRMt1GPA_Mixin_MoreThanAWord_BodyStuff2();
	joint subgoal bRMt1GPA_Mixin_MoreThanAWord_BodyStuff3();
}

joint parallel behavior bRMt1GPA_Mixin_MoreThanAWord_BodyStuff() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodMild, eArmsEmphType_atSide,
			startWith, -1,	eGazeType_normal, player, eFEBase_hopeful);
	with (priority_modifier 2) subgoal SetMood(eMood_anxious, eMoodStrength_barely, -1, 0); 
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal PerformLittleAction(10, eLittleActionType_think, eLittleActionTone_happy, eLittleActionStrength_low);
	subgoal DoDialog(70, true, etripScript_dialog_RMT1GPA_well_actually_just_try_to_think_of_one_word);
}

joint parallel behavior bRMt1GPA_Mixin_MoreThanAWord_BodyStuff2() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodMild, eArmsEmphType_atSide,
			eDcue_DialogBegin, spouse,	eGazeType_eyesOnly, eSpriteID_cabinet,	-1, 
			eDcue_DialogUnderway, spouse, -1, -1,					eFEBase_serious);
	with (priority_modifier 2, team_effect_only)
		subgoal SetMoodAtDialogCue(eDcue_DialogUnderway, spouse, eMood_angry, eMoodStrength_barely, -1, 0); 
	succeed_step; //fixme remove when it's safe to have no non-effect_only steps in a behavior 
}

joint parallel behavior bRMt1GPA_Mixin_MoreThanAWord_BodyStuff3() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodMild, eArmsEmphType_atSide,
			startWith, -1,	eGazeType_normal, eSpriteID_cabinet, eFEBase_serious);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal PerformLittleAction(10, eLittleActionType_react, eLittleActionTone_impatient, eLittleActionStrength_low);
	subgoal DoDialog(70, true, etripScript_dialog_RMT1GPA_jesus_grace_would_you_just1_let_me_do_this_please,
						etripScript_vocalSound_pause,
						etripScript_dialog_player_NEUTRAL,
						etripScript_dialog_RMT1GPA_TO_PLAYER_just_one_word);
	subgoal bRMt1GPA_Mixin_MoreThanAWord_BodyStuff3_seq();
}
sequential behavior bRMt1GPA_Mixin_MoreThanAWord_BodyStuff3_seq() {
	subgoal WaitFor(1.5f);
	with (ignore_failure) subgoal DoGaze(70, eGazeType_normal, player);
	with (ignore_failure) subgoal DoFullExpressionBase(70, eFEBase_smile);
	subgoal SetMood(eMood_anxious, eMoodStrength_barely, -1, 0); 
}


// ############
// bRMt1GPA_bgMixin_WrongSingleWord
sequential behavior bRMt1GPA_bgMixin_WrongSingleWord() {
	// set flag that player is now onto second guess
	subgoal SetBeatFlagInStoryMemory("bRMt1_PlayerOntoSecondGuess");

	mental_act { StringUtil.println("*** start bRMt1GPA_bgMixin_WrongSingleWord"); }
	with (priority 20) spawngoal SetUninterruptibleUntilSecsAfterDialog(3, gDeflectReestablish);
	with (priority 20) spawngoal handlerPauseAfterBeatGoal(sig_bRMt1GPA_bgMixin_WrongSingleWord, 0.0f);
	subgoal bRMt1GPA_Mixin_WrongSingleWord_Body();
	subgoal SetBeatGoalCommitPointReached(); subgoal SetBeatGoalGistPointReached(); subgoal ClearReestablishFlag();
	mental_act { StringUtil.println("*** end bRMt1GPA_bgMixin_WrongSingleWord"); }
}

sequential behavior bRMt1GPA_Mixin_WrongSingleWord_Body() {
	joint subgoal bRMt1GPA_Mixin_WrongSingleWord_BodyStuff();
	joint subgoal bRMt1GPA_Mixin_WrongSingleWord_BodyStuff3();
}

joint parallel behavior bRMt1GPA_Mixin_WrongSingleWord_BodyStuff() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodMild, eArmsEmphType_atSide,
			startWith, -1,	eGazeType_normal, player, eFEBase_pleasant,
			eDcue_DialogBegin, spouse,	eGazeType_eyesOnly, eSpriteID_cabinet,	eFEBase_serious);
	with (priority_modifier 2) subgoal SetMood(eMood_anxious, eMoodStrength_barely, -1, 0); 
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal PerformLittleAction(10, eLittleActionType_think, eLittleActionTone_happy, eLittleActionStrength_low);
	subgoal DoDialog(70, true, etripScript_dialog_RMT1GPA_PATIENTLY_CHEERY_no_no_thats_not_it);

	with (priority_modifier 2, team_effect_only)
		subgoal SetMoodAtDialogCue(eDcue_DialogBegin, spouse, eMood_neutral, eMoodStrength_barely, -1, 0); 
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal PerformLittleActionAtDialogCue(10, eDcue_DialogBegin, spouse,
			eLittleActionType_react, eLittleActionTone_angry, eLittleActionStrength_barely);
}


joint parallel behavior bRMt1GPA_Mixin_WrongSingleWord_BodyStuff3() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodMild, eArmsEmphType_none,
			startWith, -1,	eGazeType_normal, eSpriteID_cabinet, eFEBase_serious);
	subgoal DoDialog(70, true, etripScript_vocalSound_sigh_little,
						etripScript_dialog_RMT1GPA_SIGH_no_no,
						etripScript_dialog_player_NEUTRAL,
						etripScript_dialog_RMT1GPA_take_another_look_GESTURING_this1_says);
	subgoal bRMt1GPA_Mixin_WrongSingleWord_BodyStuff3_seq();
}
sequential behavior bRMt1GPA_Mixin_WrongSingleWord_BodyStuff3_seq() {
	subgoal SetMood(eMood_angry, eMoodStrength_barely, -1, 0); 
	subgoal WaitFor(1);
	with (ignore_failure) subgoal DoGaze(70, eGazeType_normal, player);
	with (ignore_failure) subgoal DoFullExpressionBase(70, eFEBase_smile);
	with (ignore_failure) subgoal DoGesture(55, eGestureBodyPartIndex_armL, g_armLGesture_gestureReady, true);
	subgoal SetMood(eMood_anxious, eMoodStrength_barely, -1, 0); 
}


// ############
// bRMt1GPA_bgMixin_FirstGuessTimeout
sequential behavior bRMt1GPA_bgMixin_FirstGuessTimeout() {
	// set flag that player is now onto second guess
	subgoal SetBeatFlagInStoryMemory("bRMt1_PlayerOntoSecondGuess");

	mental_act { StringUtil.println("*** start bRMt1GPA_bgMixin_FirstGuessTimeout"); }
	with (priority 20) spawngoal SetUninterruptibleUntilSecsAfterDialog(3, gDeflectReestablish);
	with (priority 20) spawngoal handlerPauseAfterBeatGoal(sig_bRMt1GPA_bgMixin_FirstGuessTimeout, 0.0f);
	subgoal bRMt1GPA_Mixin_FirstGuessTimeout_Body();
	subgoal SetBeatGoalCommitPointReached(); subgoal SetBeatGoalGistPointReached(); subgoal ClearReestablishFlag();
	mental_act { StringUtil.println("*** end bRMt1GPA_bgMixin_FirstGuessTimeout"); }
}

sequential behavior bRMt1GPA_Mixin_FirstGuessTimeout_Body() {
	joint subgoal bRMt1GPA_Mixin_FirstGuessTimeout_BodyStuff();
	joint subgoal bRMt1GPA_Mixin_FirstGuessTimeout_BodyStuff2();
	joint subgoal bRMt1GPA_Mixin_FirstGuessTimeout_BodyStuff3();
}

joint parallel behavior bRMt1GPA_Mixin_FirstGuessTimeout_BodyStuff() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodStrong, eArmsEmphType_bothRaised,
			eDcue_DialogBegin, spouse,	eGazeType_normal, eSpriteID_cabinet,	-1); 
	with (priority_modifier 2) subgoal SetMood(eMood_anxious, eMoodStrength_barely, -1, 0); 
	subgoal bRMt1GPA_Mixin_FirstGuessTimeout_BodyStuff_seq();
}
sequential behavior bRMt1GPA_Mixin_FirstGuessTimeout_BodyStuff_seq() {
	subgoal WaitFor(1);
	with (priority_modifier 2) subgoal SetMood(eMood_angry, eMoodStrength_barely, -1, 0); 
	with (ignore_failure) subgoal DoGaze(70, eGazeType_normal, player);
	subgoal DoDialog(70, true, etripScript_dialog_RMT1GPA_think_think_what1_does_this_say_to_you);
	with (priority_modifier 2) subgoal SetMood(eMood_anxious, eMoodStrength_barely, -1, 0); 
}

joint parallel behavior bRMt1GPA_Mixin_FirstGuessTimeout_BodyStuff2() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodMild, eArmsEmphType_atSide,
			eDcue_DialogBegin, spouse,	eGazeType_eyesOnly, eSpriteID_cabinet,	-1, 
			eDcue_DialogUnderway, spouse, -1, -1,					eFEBase_serious);
	with (priority_modifier 2, team_effect_only)
		subgoal SetMoodAtDialogCue(eDcue_DialogUnderway, spouse, eMood_angry, eMoodStrength_barely, -1, 0); 
	succeed_step; //fixme remove when it's safe to have no non-effect_only steps in a behavior 
}

joint parallel behavior bRMt1GPA_Mixin_FirstGuessTimeout_BodyStuff3() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodMild, eArmsEmphType_atSide,
			startWith, -1,	eGazeType_normal, eSpriteID_cabinet, eFEBase_serious);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal PerformLittleAction(10, eLittleActionType_react, eLittleActionTone_impatient, eLittleActionStrength_low);
	subgoal DoDialog(70, true, etripScript_dialog_RMT1GPA_jesus_grace_would_you_just1_let_me_do_this_please,
						etripScript_vocalSound_pause,
						etripScript_dialog_player_NEUTRAL,
						etripScript_dialog_RMT1GPA_TO_PLAYER_just_one_word);
	subgoal bRMt1GPA_Mixin_MoreThanAWord_BodyStuff3_seq();
}
sequential behavior bRMt1GPA_Mixin_FirstGuessTimeout_BodyStuff3_seq() {
	subgoal WaitFor(1.5f);
	with (ignore_failure) subgoal DoGaze(70, eGazeType_normal, player);
	with (ignore_failure) subgoal DoFullExpressionBase(70, eFEBase_smile);
	subgoal SetMood(eMood_anxious, eMoodStrength_barely, -1, 0); 
}


// ############
// bRMt1GPA_bgMixin_TellMeMore
sequential behavior bRMt1GPA_bgMixin_TellMeMore() {
	// set flag that player is now onto second guess
	subgoal SetBeatFlagInStoryMemory("bRMt1_PlayerOntoSecondGuess");
	// set flag that we did tell we mentioned second honeymoon
	subgoal SetBeatFlagInStoryMemory("bRMt1_MentionedSecondHoneymoon");

	with (priority 99) spawngoal DoDuringBeatMixinContextForJustThisBeatGoal();

	mental_act { StringUtil.println("*** start bRMt1GPA_bgMixin_TellMeMore"); }
	with (priority 20) spawngoal SetUninterruptibleUntilSecsAfterDialog(3, gDeflectReestablish);
	with (priority 20) spawngoal handlerPauseAfterBeatGoal(sig_bRMt1GPA_bgMixin_TellMeMore, 0.0f);
	subgoal bRMt1GPA_Mixin_TellMeMore_Body();
	subgoal SetBeatGoalCommitPointReached(); subgoal SetBeatGoalGistPointReached(); // DO NOT subgoal ClearReestablishFlag();
	mental_act { StringUtil.println("*** end bRMt1GPA_bgMixin_TellMeMore"); }
}

sequential behavior bRMt1GPA_Mixin_TellMeMore_Body() {
	subgoal SetDeflectModeReest(trip, -1, etripScript_dialog_RMT1N_INTERRUPTED_SMILING_y__yeah_our_second_honeymoon_picture_says,
									eFEBase_serious, eMood_neutral, eFEBase_skeptical, eMood_angry, eFEBase_serious, eMood_angry,
									-1, false);
	joint subgoal bRMt1GPA_Mixin_TellMeMore_BodyStuff();
	joint subgoal bRMt1GPA_Mixin_TellMeMore_BodyStuff2();
	joint subgoal bRMt1GPA_Mixin_TellMeMore_BodyStuff3();
	with (ignore_failure) joint subgoal bRMt1GPA_Mixin_TellMeMore_BodyStuff4();
}

joint parallel behavior bRMt1GPA_Mixin_TellMeMore_BodyStuff() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodMild, eArmsEmphType_bothRaised,
			startWith, -1,	eGazeType_normal, player, eFEBase_smile);
	with (priority_modifier 2) subgoal SetMood(eMood_anxious, eMoodStrength_low, -1, 0); 
	subgoal bRMt1GPA_Mixin_TellMeMore_BodyStuff_seq();
}
sequential behavior bRMt1GPA_Mixin_TellMeMore_BodyStuff_seq() {
	subgoal DoDialog(70, true, etripScript_dialog_RMT1GPA_UPBEAT_well_the_thing_is_you_see_this_trip_to_italy_it1_was_our_second_honeymoon);
	mental_act {
		ProvocativeContentArchive.archive.AddContent(eProvocativeContentType_SpecificRedHotEvent, 
														eProvocativeContentParam_Trip_says_Italy_was_meant_to_be_second_honeymoon_Grace_says_it_was_just_a_weekend_getaway,
														grace,
														eBackstoryCategory_Admitting_that_theyve_had_an_unhappy_marriage_RM,
														eBackstoryCategory_Grace_has_disconnected_herself_from_Trip_always_seems_unsatisfied_distant_even_when_Trip_tries_to_reach_out_RM,
														eBackstoryCategory_Grace_feels_controlled_by_everyone_in_her_life_particularly_Trip_Trip_thinks_he_is_helping_her_AA_RM);
		ProvocativeContentArchive.archive.AddContent(eProvocativeContentType_SpecificRedHotEvent, 
														eProvocativeContentParam_Trip_says_Italy_was_meant_to_be_second_honeymoon_Grace_says_it_was_just_a_weekend_getaway,
														trip,
														eBackstoryCategory_Admitting_that_theyve_had_an_unhappy_marriage_RM,
														eBackstoryCategory_Grace_has_disconnected_herself_from_Trip_always_seems_unsatisfied_distant_even_when_Trip_tries_to_reach_out_RM,
														eBackstoryCategory_Grace_feels_controlled_by_everyone_in_her_life_particularly_Trip_Trip_thinks_he_is_helping_her_AA_RM);
	}
}

joint parallel behavior bRMt1GPA_Mixin_TellMeMore_BodyStuff2() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodMild, eArmsEmphType_atSide,
			eDcue_DialogBegin, spouse,	eGazeType_normal, eSpriteID_cabinet,	-1, 
			eDcue_DialogUnderway, spouse, -1, -1,					eFEBase_serious);
	succeed_step; //fixme remove when it's safe to have no non-effect_only steps in a behavior 
}

joint parallel behavior bRMt1GPA_Mixin_TellMeMore_BodyStuff3() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodMild, eArmsEmphType_atSide,
			startWith, -1,	eGazeType_avert, eSpriteID_cabinet, eFEBase_serious);
	with (priority_modifier 2) subgoal SetMood(eMood_neutral, eMoodStrength_barely, -1, 0); 
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal PerformLittleAction(10, eLittleActionType_react, eLittleActionTone_angry, eLittleActionStrength_barely);
	subgoal WaitFor(1);
}

joint parallel behavior bRMt1GPA_Mixin_TellMeMore_BodyStuff4() { teammembers Trip Grace; 
	precondition { StoryMemory	(BeatFlagWME sVal == "bRMt1_StartedGuessingGame") }
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodMild, eArmsEmphType_gestureReadyL,
			startWith, -1,	eGazeType_normal, player, eFEBase_smile);
	subgoal SetMood(eMood_anxious, eMoodStrength_barely, -1, 0); 
	subgoal DoDialog(70, true, etripScript_dialog_RMT1GPA_so_in_a_word_this_says);
}


// ############
// bRMt1GPA_bgMixin_LookAndIgnore
sequential behavior bRMt1GPA_bgMixin_LookAndIgnore() {
	mental_act { StringUtil.println("*** start bRMt1GPA_bgMixin_LookAndIgnore"); }
	subgoal SetLetBeatGoalFinishFlag(true);	// mixins are UNINTERRUPTIBLE
	subgoal SetReestablishFlag();			// later requires reestablish
	with (priority 20) spawngoal handlerPauseAfterBeatGoal(sig_bRMt1GPA_bgMixin_LookAndIgnore, 0.0f);
	subgoal bRMt1GPA_Mixin_LookAndIgnore_Body();
	subgoal SetBeatGoalCommitPointReached(); subgoal SetBeatGoalGistPointReached(); // DO NOT subgoal ClearReestablishFlag();
	mental_act { StringUtil.println("*** end bRMt1GPA_bgMixin_LookAndIgnore"); }
}

sequential behavior bRMt1GPA_Mixin_LookAndIgnore_Body() {
	joint subgoal bRMt1GPA_Mixin_LookAndIgnore_BodyStuff();
}

joint parallel behavior bRMt1GPA_Mixin_LookAndIgnore_BodyStuff() { teammembers Trip Grace; 
	with (ignore_failure) subgoal DoGaze(70, eGazeType_normal, player);
	with (priority_modifier 1, ignore_failure, team_effect_only) 
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodMild, eArmsEmphType_atSide,
			startWith, -1,	-1, -1, -1);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal PerformLittleAction(10, eLittleActionType_react, eLittleActionTone_moodDetermined, eLittleActionStrength_barely);
	subgoal WaitFor(0.2f);
}


// ############
// bRMt1GPA_bgWaitTimeout
sequential behavior bRMt1GPA_bgWaitTimeout() {

	// stall beginning this until the bRMt1GPA_Demon_FirstGuessTimeout is gone!
	with (success_test { !(GoalStepWME signature == "bRMt1GPA_Demon_FirstGuessTimeout()") } ) wait;

	mental_act { StringUtil.println("*** start bRMt1GPA_bgWaitTimeout"); }
	subgoal SetDeflectMode(eDeflectMode_minimal);
	//not for this beat...  subgoal SetBeatGistPointReached(true);	// be sure this is set by now
	subgoal bRMt1GPA_WaitTimeout_Body();
	with (ignore_failure) subgoal WaitABitLongerIfPlayerIsTyping(15.0);
	
	// AddDA to cause TxnOut_WrongAnswer
	subgoal AddDA(eDAType_Timeout, -1);	
	wait;	// the DA handler for the above eDAType_Timeout will succeed this wait
}

sequential behavior bRMt1GPA_WaitTimeout_Body() {
	joint subgoal bRMt1GPA_WaitTimeout_BodyStuff();
}

joint parallel behavior bRMt1GPA_WaitTimeout_BodyStuff() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodMild, eArmsEmphType_atSide,
			startWith, -1,	eGazeType_normal, player, eFEBase_smile);
	with (priority_modifier 2) subgoal SetMood(eMood_anxious, eMoodStrength_barely, -1, 0); 
	subgoal WaitFor(5);
}


// ############
// bRMt1GPA_bgTxnOut_WrongAnswer
sequential behavior bRMt1GPA_bgTxnOut_WrongAnswer() {
	subgoal DeactivateContext(context_RM_PlayerNotAtPicture);
	subgoal DeactivateContext(context_RM_ItalyGuessingGame);
	subgoal ActivateContext_ifFalse(context_DuringTxnOut, cContextPriority_beat, gDeflectReestablish);
	subgoal ActivateContextPriorityMap(contextPriorityMap_GlobalTrumpsBeat_obj);
    subgoal SetPostBeatMixin(ePostBeatMixinID_RockyMarriageT1_WrongAnswer);
	subgoal TurnOnPostBeatMixinNLURule(ePostBeatMixinRuleFlag_bRM_Italy, true);

	mental_act { StringUtil.println("*** start bRMt1GPA_bgTxnOut_WrongAnswer"); }
	subgoal SetBeatTxningOut();
	with (priority 20) spawngoal SetUninterruptibleUntilSecsAfterDialog(2, gDeflectReestablish);
	with (priority 20) spawngoal handlerPauseAfterBeatGoal(sig_bRMt1GPA_bgTxnOut_WrongAnswer, 0.0f);
	subgoal bRMt1GPA_TxnOut_WrongAnswer_Body();
	subgoal SetBeatGoalCommitPointReached(); subgoal SetBeatGoalGistPointReached(); subgoal ClearReestablishFlag();
	mental_act { StringUtil.println("*** end bRMt1GPA_bgTxnOut_WrongAnswer"); }
}

// ############
// bRMt1GPA_bgTxnOut_WrongAnswer_p2
sequential behavior bRMt1GPA_bgTxnOut_WrongAnswer_p2() {
	mental_act { StringUtil.println("*** start bRMt1GPA_bgTxnOut_WrongAnswer_p2"); }
	subgoal SetBeatTxningOut();
	with (priority 20) spawngoal SetUninterruptibleUntilSecsAfterDialog(2, gDeflectReestablish);
	with (priority 20) spawngoal handlerPauseAfterBeatGoal(sig_bRMt1GPA_bgTxnOut_WrongAnswer_p2, 0.0f);
	subgoal bRMt1GPA_TxnOut_WrongAnswer_p2_Body();
	subgoal SetBeatGoalCommitPointReached(); subgoal SetBeatGoalGistPointReached(); subgoal ClearReestablishFlag();
	mental_act { StringUtil.println("*** end bRMt1GPA_bgTxnOut_WrongAnswer_p2"); }
}

// ## positive spin
sequential behavior bRMt1GPA_TxnOut_WrongAnswer_Body() {
	precondition { BeatMemory argWME = (BeatArgumentWME bPositiveSpin == true) }
	subgoal SetDeflectModeReest(trip, -1, etripScript_dialog_RMT1N_INTERRUPTED_y__yeah_romance,
									eFEBase_pleasant, eMood_neutral, eFEBase_serious, eMood_angry, eFEBase_serious, eMood_neutral,
									-1, false);
	joint subgoal bRMt1GPA_TxnOut_WrongAnswer_posSpin_BodyStuff();
	joint subgoal bRMt1GPA_TxnOut_WrongAnswer_posSpin_BodyStuff2();
}

sequential behavior bRMt1GPA_TxnOut_WrongAnswer_p2_Body() {
	precondition { BeatMemory argWME = (BeatArgumentWME bPositiveSpin == true) }
	subgoal SetDeflectModeReest(trip, -1, etripScript_dialog_RMT1N_INTERRUPTED_y__yeah_oh_never_mind,
									eFEBase_pleasant, eMood_neutral, eFEBase_serious, eMood_angry, eFEBase_serious, eMood_neutral,
									-1, false);
	joint subgoal bRMt1GPA_TxnOut_WrongAnswer_posSpin_BodyStuff3();
}

joint parallel behavior bRMt1GPA_TxnOut_WrongAnswer_posSpin_BodyStuff() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodStrong, eArmsEmphType_none,
			startWith, -1,	eGazeType_normal, player, eFEBase_pleasant, 
							eGestureBodyPartIndex_armL, etripScript_layer_armL_suggest_hold,
							eGestureBodyPartIndex_armR, etripScript_layer_armR_emphasis3_hold, -1, -1, -1, -1);
	with (priority_modifier 2) subgoal SetMood(eMood_rejected, eMoodStrength_barely, -1, 0); 
	subgoal bRMt1GPA_TxnOut_WrongAnswer_posSpin_BodyStuff_seq();
}
sequential behavior bRMt1GPA_TxnOut_WrongAnswer_posSpin_BodyStuff_seq() {
	subgoal WaitFor(1);
	with (priority_modifier 1, ignore_failure)
		subgoal PerformLittleAction(10, eLittleActionType_react, eLittleActionTone_happy, eLittleActionStrength_barely);
	subgoal DoDialog(70, true, etripScript_dialog_RMT1GPA_OVER_THE_TOP_romance_it_says1_romance);
}

joint parallel behavior bRMt1GPA_TxnOut_WrongAnswer_posSpin_BodyStuff2() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodMild, eArmsEmphType_atSide,
			startWith, -1,	eGazeType_normal, player, eFEBase_smile, 
			eDcue_DialogBegin, spouse,	eGazeType_eyesOnly, eSpriteID_cabinet,	eFEBase_serious);
	with (priority_modifier 2, team_effect_only)
		subgoal SetMoodAtDialogCue(eDcue_DialogUnderway, spouse, eMood_rejected, eMoodStrength_barely, -1, 0); 
	succeed_step; //fixme remove when it's safe to have no non-effect_only steps in a behavior 
}

joint parallel behavior bRMt1GPA_TxnOut_WrongAnswer_posSpin_BodyStuff3() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodStrong, eArmsEmphType_none,
			startWith, -1,	eGazeType_normal, player, eFEBase_pleasant);
	with (priority_modifier 2) subgoal SetMood(eMood_rejected, eMoodStrength_barely, -1, 0); 
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal PerformLittleActionAfterDelay(10, eLittleActionType_think, eLittleActionTone_serious, eLittleActionStrength_low, 
												2.0f);
	subgoal DoDialog(70, true, etripScript_vocalSound_pause,
								etripScript_dialog_RMT1GPA_well_look_i_wont_bore_you_two_with_this_anymore,
								etripScript_vocalSound_pause,
								etripScript_dialog_RMT1GPA_TO_PLAYER_i_just_wanted_to_share_this_with_you_thats_all);	
}


// ## negative spin
sequential behavior bRMt1GPA_TxnOut_WrongAnswer_Body() {
	precondition { BeatMemory argWME = (BeatArgumentWME bPositiveSpin == false) }
	subgoal SetDeflectModeReest(trip, -1, etripScript_dialog_RMT1N_INTERRUPTED_y__yeah_romance,
									eFEBase_serious, eMood_neutral, eFEBase_skeptical, eMood_angry, eFEBase_serious, eMood_angry,
									-1, false);
	with (priority_modifier 99) subgoal SetAffinity_LeanToTPA();	// ### AFFINITY CHANGE LEANTOTPA
	joint subgoal bRMt1GPA_TxnOut_WrongAnswer_posSpin_BodyStuff();
	joint subgoal bRMt1GPA_TxnOut_WrongAnswer_posSpin_BodyStuff2();
}

sequential behavior bRMt1GPA_TxnOut_WrongAnswer_p2_Body() {
	precondition { BeatMemory argWME = (BeatArgumentWME bPositiveSpin == false) }
	subgoal SetDeflectModeReest(trip, -1, etripScript_dialog_RMT1N_INTERRUPTED_y__yeah_oh_never_mind,
									eFEBase_serious, eMood_neutral, eFEBase_skeptical, eMood_angry, eFEBase_serious, eMood_angry,
									-1, false);
	with (ignore_failure) joint subgoal bRMt1GPA_TxnOut_WrongAnswer_negSpin_BodyStuff3();
	with (ignore_failure) joint subgoal bRMt1GPA_TxnOut_WrongAnswer_negSpin_BodyStuff4();
}

joint parallel behavior bRMt1GPA_TxnOut_WrongAnswer_negSpin_BodyStuff3() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodStrong, eArmsEmphType_none,
			startWith, -1,	eGazeType_avert, eSpriteID_cabinet, eFEBase_pleasant);
	with (priority_modifier 2) subgoal SetMood(eMood_rejected, eMoodStrength_low, -1, 0); 
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal PerformLittleActionAfterDelay(10, eLittleActionType_think, eLittleActionTone_anxious, eLittleActionStrength_low, 
												2.0f);
	subgoal DoDialog(70, true, etripScript_vocalSound_pause,
								etripScript_dialog_RMT1GPA_well_look_i_wont_bore_you_two_with_this_anymore,
								etripScript_vocalSound_pause,
								etripScript_dialog_RMT1GPA_not_everybody_appreciates_this_kind_of_thing);	
	
	mental_act {
		ProvocativeContentArchive.archive.AddContent(eProvocativeContentType_SpecificMediumHotEvent, 
														eProvocativeContentParam_T_Not_everybody_appreciates_this_kind_of_thing_I_thought_wed_have_a_good_time_there_thats_all,
														grace,
														eBackstoryCategory_Grace_is_a_bit_spoiled_Trip_reinforces_it_to_make_sure_she_still_has_flaws_F,
														eBackstoryCategory_Grace_wants_more_out_of_life_eg_art_but_is_suppressed_by_Trip_and_she_is_afraid_of_going_for_it_AA,
														eBackstoryCategory_Grace_feels_controlled_by_everyone_in_her_life_particularly_Trip_Trip_thinks_he_is_helping_her_AA_RM);
	}
}

joint parallel behavior bRMt1GPA_TxnOut_WrongAnswer_negSpin_BodyStuff4() { teammembers Trip Grace; 
	precondition {	(ObjectPositionWME objectID == trip  x :: tripX  z :: tripZ)	// if player is close to trip
					(ObjectPositionWME objectID == player  x :: playerX  z :: playerZ)
					(Staging.getXZDistanceBetweenPoints(tripX, tripZ, playerX, playerZ) < 150.0f) }
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodMild, eArmsEmphType_atSide,
			startWith, -1,	eGazeType_normal, player, eFEBase_serious,
			eDcue_DialogUnderway, me,	eGazeType_eyesOnly, eSpriteID_cabinet, -1);
	subgoal bRMt1GPA_TxnOut_WrongAnswer_negSpin_BodyStuff4_seq();
}
sequential behavior bRMt1GPA_TxnOut_WrongAnswer_negSpin_BodyStuff4_seq() {
	subgoal WaitFor(0.5f);
	with (ignore_failure) subgoal DoGaze(70, eGazeType_avert, eSpriteID_cabinet);
	subgoal DoDialog(70, true, etripScript_dialog_RMT1GPA_LOOKING_AT_PICTURE_i_thought_wed_have1_a_good_time_there_thats_all);
}


// ############
// bRMt1GPA_bgTxnOut_LeanToTPA_RightAnswer
sequential behavior bRMt1GPA_bgTxnOut_LeanToTPA_RightAnswer() {
	with (priority_modifier 99) subgoal SetAffinity_LeanToTPA();	// ### AFFINITY CHANGE LEANTOTPA
	subgoal DeactivateContext(context_RM_PlayerNotAtPicture);
	subgoal DeactivateContext(context_RM_ItalyGuessingGame);
	subgoal ActivateContext_ifFalse(context_DuringTxnOut, cContextPriority_beat, gDeflectReestablish);
	subgoal ActivateContextPriorityMap(contextPriorityMap_GlobalTrumpsBeat_obj);
    subgoal SetPostBeatMixin(ePostBeatMixinID_RockyMarriageT1_RightAnswer);
	subgoal TurnOnPostBeatMixinNLURule(ePostBeatMixinRuleFlag_bRM_Italy, true);

	mental_act { StringUtil.println("*** start bRMt1GPA_bgTxnOut_LeanToTPA_RightAnswer"); }
	subgoal SetBeatTxningOut();
	with (priority 20) spawngoal SetUninterruptibleUntilSecsAfterDialog(2, gDeflectReestablish);
	with (priority 20) spawngoal handlerPauseAfterBeatGoal(sig_bRMt1GPA_bgTxnOut_LeanToTPA_RightAnswer, 0.0f);
	subgoal bRMt1GPA_TxnOut_LeanToTPA_RightAnswer_Body();
	subgoal SetBeatGoalCommitPointReached(); subgoal SetBeatGoalGistPointReached(); subgoal ClearReestablishFlag();
	mental_act { StringUtil.println("*** end bRMt1GPA_bgTxnOut_LeanToTPA_RightAnswer"); }
}

// ############
// bRMt1GPA_bgTxnOut_LeanToTPA_RightAnswer_p2
sequential behavior bRMt1GPA_bgTxnOut_LeanToTPA_RightAnswer_p2() {
	mental_act { StringUtil.println("*** start bRMt1GPA_bgTxnOut_LeanToTPA_RightAnswer_p2"); }
	subgoal SetBeatTxningOut();
	with (priority 20) spawngoal SetUninterruptibleUntilSecsAfterDialog(2, gDeflectReestablish);
	with (priority 20) spawngoal handlerPauseAfterBeatGoal(sig_bRMt1GPA_bgTxnOut_LeanToTPA_RightAnswer_p2, 0.0f);
	subgoal bRMt1GPA_TxnOut_LeanToTPA_RightAnswer_p2_Body();
	subgoal SetBeatGoalCommitPointReached(); subgoal SetBeatGoalGistPointReached(); subgoal ClearReestablishFlag();
	mental_act { StringUtil.println("*** end bRMt1GPA_bgTxnOut_LeanToTPA_RightAnswer_p2"); }
}

// ## positive spin
sequential behavior bRMt1GPA_TxnOut_LeanToTPA_RightAnswer_Body() {
	precondition { BeatMemory argWME = (BeatArgumentWME bPositiveSpin == true) }
	subgoal SetDeflectModeReest(trip, -1, etripScript_dialog_RMT1N_INTERRUPTED_y__yeah_romance,
									eFEBase_pleasant, eMood_neutral, eFEBase_serious, eMood_angry, eFEBase_serious, eMood_neutral,
									-1, false);
	joint subgoal bRMt1GPA_TxnOut_LeanToTPA_RightAnswer_posSpin_BodyStuff();
	joint subgoal bRMt1GPA_TxnOut_LeanToTPA_RightAnswer_posSpin_BodyStuff2();
}

sequential behavior bRMt1GPA_TxnOut_LeanToTPA_RightAnswer_p2_Body() {
	precondition { BeatMemory argWME = (BeatArgumentWME bPositiveSpin == true) }
	subgoal SetDeflectModeReest(trip, -1, etripScript_dialog_RMT1N_INTERRUPTED_y__yeah_but_it_was_the_art_that_was_so_amazing,
									eFEBase_pleasant, eMood_neutral, eFEBase_serious, eMood_angry, eFEBase_serious, eMood_neutral,
									egraceScript_vocalSound_sigh_little, false);
	joint subgoal bRMt1GPA_TxnOut_LeanToTPA_RightAnswer_posSpin_BodyStuff3();
	joint subgoal bRMt1GPA_TxnOut_LeanToTPA_RightAnswer_posSpin_BodyStuff4();
}

joint parallel behavior bRMt1GPA_TxnOut_LeanToTPA_RightAnswer_posSpin_BodyStuff() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodStrong, eArmsEmphType_none,
			startWith, -1,	eGazeType_normal, player, eFEBase_surprised, 
							eGestureBodyPartIndex_armL, g_armLGesture_gestureReady,
							eGestureBodyPartIndex_armR, g_armRGesture_gestureReady, -1, -1, -1, -1);
	with (priority_modifier 2) subgoal SetMood(eMood_happy, eMoodStrength_barely, -1, 0); 
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal PerformLittleAction(10, eLittleActionType_react, eLittleActionTone_happy, eLittleActionStrength_barely);
	subgoal DoDialog(70, true, etripScript_dialog_RMT1GPA_yes_thats_it_love_romance_i1_knew_youd_guess_it);
	subgoal bRMt1GPA_TxnOut_LeanToTPA_RightAnswer_posSpin_BodyStuff_seq();
}
sequential behavior bRMt1GPA_TxnOut_LeanToTPA_RightAnswer_posSpin_BodyStuff_seq(){
	subgoal WaitFor(1.5f);
	with (ignore_failure) subgoal DoFullExpressionBase(70, eFEBase_smile);
}


joint parallel behavior bRMt1GPA_TxnOut_LeanToTPA_RightAnswer_posSpin_BodyStuff2() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodMild, eArmsEmphType_atSide,
			startWith, -1,	eGazeType_normal, player, eFEBase_smile, 
			eDcue_DialogBegin, spouse,	eGazeType_eyesOnly, eSpriteID_cabinet,	eFEBase_serious);
	with (priority_modifier 2, team_effect_only)
		subgoal SetMoodAtDialogCue(eDcue_DialogUnderway, spouse, eMood_neutral, eMoodStrength_barely, -1, 0); 
	succeed_step; //fixme remove when it's safe to have no non-effect_only steps in a behavior 
}

joint parallel behavior bRMt1GPA_TxnOut_LeanToTPA_RightAnswer_posSpin_BodyStuff3() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodStrong, eArmsEmphType_none,
			startWith, -1,	eGazeType_normal, player, eFEBase_smile,
			eDcue_DialogUnderway, me, eGazeType_normal, eSpriteID_cabinet,					-1);
	with (priority_modifier 2) subgoal SetMood(eMood_happy, eMoodStrength_barely, -1, 0); 
	subgoal DoDialog(70, true, etripScript_dialog_RMT1GPA_CLEARS_THROAT_well_im_not_going1_to_bore_you_with_the_details,
								etripScript_dialog_RMT1GPA_but_it_was1_a_very_romantic_weekend_wasnt2_it_grace);	
}

joint parallel behavior bRMt1GPA_TxnOut_LeanToTPA_RightAnswer_posSpin_BodyStuff4() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodMild, eArmsEmphType_atSide,
			startWith, -1,	eGazeType_normal, player, eFEBase_smile,
			eDcue_DialogBegin, spouse,	eGazeType_eyesOnly, eSpriteID_cabinet,	-1);
	with (priority_modifier 2, team_effect_only)
		subgoal SetMoodAtDialogCue(eDcue_DialogBegin, spouse, eMood_anxious, eMoodStrength_barely, -1, 0); 
	succeed_step; //fixme remove when it's safe to have no non-effect_only steps in a behavior 
}


// ## negative spin
sequential behavior bRMt1GPA_TxnOut_LeanToTPA_RightAnswer_Body() {
	precondition { BeatMemory argWME = (BeatArgumentWME bPositiveSpin == false) }
	subgoal SetDeflectModeReest(trip, -1, etripScript_dialog_RMT1N_INTERRUPTED_y__yeah_romance,
									eFEBase_pleasant, eMood_neutral, eFEBase_serious, eMood_angry, eFEBase_serious, eMood_neutral,
									-1, false);
	joint subgoal bRMt1GPA_TxnOut_LeanToTPA_RightAnswer_posSpin_BodyStuff();
	joint subgoal bRMt1GPA_TxnOut_LeanToTPA_RightAnswer_posSpin_BodyStuff2();
}

sequential behavior bRMt1GPA_TxnOut_LeanToTPA_RightAnswer_p2_Body() {
	precondition { BeatMemory argWME = (BeatArgumentWME bPositiveSpin == false) }
	subgoal SetDeflectModeReest(trip, -1, etripScript_dialog_RMT1N_INTERRUPTED_y__yeah_but_it_was_the_art_that_was_so_amazing,
									eFEBase_pleasant, eMood_neutral, eFEBase_serious, eMood_angry, eFEBase_serious, eMood_neutral,
									egraceScript_vocalSound_sigh_little, false);
	joint subgoal bRMt1GPA_TxnOut_LeanToTPA_RightAnswer_negSpin_BodyStuff3();
	joint subgoal bRMt1GPA_TxnOut_LeanToTPA_RightAnswer_negSpin_BodyStuff4();
}

joint parallel behavior bRMt1GPA_TxnOut_LeanToTPA_RightAnswer_negSpin_BodyStuff3() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodStrong, eArmsEmphType_bothRaised,
			startWith, -1,	eGazeType_normal, player, eFEBase_smile,
			eDcue_DialogUnderway, me, eGazeType_normal, eSpriteID_cabinet,					-1);
	with (priority_modifier 2) subgoal SetMood(eMood_happy, eMoodStrength_barely, -1, 0); 
	with (priority_modifier 2, team_effect_only)
		subgoal SetMoodAtDialogCue(eDcue_1, me, eMood_angry, eMoodStrength_barely, -1, 0); 
	subgoal DoDialog(70, true, etripScript_dialog_RMT1GPA_uh_everything_in_italy1_was_so_romantic_the_scenery_the2_food_the_wine,
						etripScript_dialog_RMT1GPA_oh_1_and1_the_art_the_art_isnt_that_right_grace);
	
	mental_act {
		ProvocativeContentArchive.archive.AddContent(eProvocativeContentType_SpecificMediumHotEvent, 
														eProvocativeContentParam_Trip_calls_Grace_on_her_supposed_love_of_art,
														grace,
														eBackstoryCategory_Grace_is_a_bit_spoiled_Trip_reinforces_it_to_make_sure_she_still_has_flaws_F,
														eBackstoryCategory_Grace_wants_more_out_of_life_eg_art_but_is_suppressed_by_Trip_and_she_is_afraid_of_going_for_it_AA,
														eBackstoryCategory_Grace_feels_controlled_by_everyone_in_her_life_particularly_Trip_Trip_thinks_he_is_helping_her_AA_RM);
	}
}

joint parallel behavior bRMt1GPA_TxnOut_LeanToTPA_RightAnswer_negSpin_BodyStuff4() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodMild, eArmsEmphType_atSide,
			startWith, -1,	eGazeType_normal, player, eFEBase_smile,
			eDcue_DialogBegin, spouse,	eGazeType_eyesOnly, eSpriteID_cabinet,	-1);
	with (priority_modifier 2, team_effect_only)
		subgoal SetMoodAtDialogCue(eDcue_DialogBegin, spouse, eMood_anxious, eMoodStrength_barely, -1, 0); 
	succeed_step; //fixme remove when it's safe to have no non-effect_only steps in a behavior 
}


// ############
// bRMt1GPA_bgTxnOut_PlayerNotAtPicture
sequential behavior bRMt1GPA_bgTxnOut_PlayerNotAtPicture() {
	subgoal DeactivateContext(context_RM_PlayerNotAtPicture);
	subgoal DeactivateContext(context_RM_ItalyGuessingGame);
	subgoal ActivateContext_ifFalse(context_DuringTxnOut, cContextPriority_beat, gDeflectReestablish);
	subgoal ActivateContextPriorityMap(contextPriorityMap_GlobalTrumpsBeat_obj);
    subgoal SetPostBeatMixin(ePostBeatMixinID_RockyMarriageT1_PlayerNotAtPicture);
	subgoal TurnOnPostBeatMixinNLURule(ePostBeatMixinRuleFlag_bRM_Italy, true);

	mental_act { StringUtil.println("*** start bRMt1GPA_bgTxnOut_PlayerNotAtPicture"); }
	subgoal SetBeatTxningOut();
	with (priority 20) spawngoal SetUninterruptibleUntilSecsAfterDialog(2, gDeflectReestablish);
	with (priority 20) spawngoal handlerPauseAfterBeatGoal(sig_bRMt1GPA_bgTxnOut_PlayerNotAtPicture, 0.0f);
	subgoal bRMt1GPA_TxnOut_PlayerNotAtPicture_Body();
	subgoal SetBeatGoalCommitPointReached(); subgoal SetBeatGoalGistPointReached(); subgoal ClearReestablishFlag();
	mental_act { StringUtil.println("*** end bRMt1GPA_bgTxnOut_PlayerNotAtPicture"); }
}

// ## positive spin
sequential behavior bRMt1GPA_TxnOut_PlayerNotAtPicture_Body() {
	precondition {	{ BeatMemory argWME = (BeatArgumentWME bPositiveSpin == true) }
					{ StoryMemory beatRMp1WME = (BeatRMp1WME) } }
	subgoal SetDeflectModeReest(grace, -1, egraceScript_dialog_RMT1N_INTERRUPTED_y__yes_well_trip_can_get_overly_obsessed,
									eFEBase_pleasant, eMood_neutral, eFEBase_serious, eMood_angry, eFEBase_serious, eMood_neutral,
									-1, false);
	mental_act { beatRMp1WME.setTempMillis(System.currentTimeMillis()); }	// remember this point in time
	joint subgoal bRMt1GPA_TxnOut_PlayerNotAtPicture_posSpin_BodyStuff();
	mental_act { beatRMp1WME.setTempMillis(System.currentTimeMillis()); }	// remember this point in time
	joint subgoal bRMt1GPA_TxnOut_PlayerNotAtPicture_posSpin_BodyStuff2();
}

// ############
// bRMt1GPA_bgTxnOut_PlayerNotAtPicture_p2
sequential behavior bRMt1GPA_bgTxnOut_PlayerNotAtPicture_p2() {
	mental_act { StringUtil.println("*** start bRMt1GPA_bgTxnOut_PlayerNotAtPicture_p2"); }
	subgoal SetBeatTxningOut();
	with (priority 20) spawngoal handlerPauseAfterBeatGoal(sig_bRMt1GPA_bgTxnOut_PlayerNotAtPicture_p2, 0.0f);
	subgoal bRMt1GPA_TxnOut_PlayerNotAtPicture_p2_Body();
	subgoal SetBeatGoalCommitPointReached(); subgoal SetBeatGoalGistPointReached(); subgoal ClearReestablishFlag();
	mental_act { StringUtil.println("*** end bRMt1GPA_bgTxnOut_PlayerNotAtPicture_p2"); }
}

// ## positive spin
sequential behavior bRMt1GPA_TxnOut_PlayerNotAtPicture_p2_Body() {
	precondition {	{ BeatMemory argWME = (BeatArgumentWME bPositiveSpin == true) }
					{ StoryMemory beatRMp1WME = (BeatRMp1WME) } }
	subgoal SetDeflectModeReest(grace, -1, egraceScript_dialog_RMT1N_INTERRUPTED_y__yes_no_it_was_just_a_weekend_getaway,
									eFEBase_pleasant, eMood_neutral, eFEBase_serious, eMood_angry, eFEBase_serious, eMood_neutral,
									-1, false);
	with (ignore_failure) joint subgoal bRMt1GPA_TxnOut_PlayerNotAtPicture_posSpin_BodyStuff3();
	with (ignore_failure) joint subgoal bRMt1GPA_TxnOut_PlayerNotAtPicture_posSpin_BodyStuff5();
}

// ############
// bRMt1GPA_bgTxnOut_PlayerNotAtPicture_p3
sequential behavior bRMt1GPA_bgTxnOut_PlayerNotAtPicture_p3() {
	mental_act { StringUtil.println("*** start bRMt1GPA_bgTxnOut_PlayerNotAtPicture_p3"); }
	subgoal SetBeatTxningOut();
	with (priority 20) spawngoal handlerPauseAfterBeatGoal(sig_bRMt1GPA_bgTxnOut_PlayerNotAtPicture_p3, 0.0f);
	subgoal bRMt1GPA_TxnOut_PlayerNotAtPicture_p3_Body();
	subgoal SetBeatGoalCommitPointReached(); subgoal SetBeatGoalGistPointReached(); subgoal ClearReestablishFlag();
	mental_act { StringUtil.println("*** end bRMt1GPA_bgTxnOut_PlayerNotAtPicture_p3"); }
}

// ## positive spin
sequential behavior bRMt1GPA_TxnOut_PlayerNotAtPicture_p3_Body() {
	precondition {	{ BeatMemory argWME = (BeatArgumentWME bPositiveSpin == true) }
					{ StoryMemory beatRMp1WME = (BeatRMp1WME) } }
	succeed_step;
}


joint parallel behavior bRMt1GPA_TxnOut_PlayerNotAtPicture_posSpin_BodyStuff() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodMild, eArmsEmphType_atSide,
			startWith, -1,	eGazeType_normal, player, eFEBase_serious);
	with (priority_modifier 2) subgoal SetMood(eMood_anxious, eMoodStrength_low, -1, 0); 
	succeed_step; //fixme remove when it's safe to have no non-effect_only steps in a behavior 
}

joint parallel behavior bRMt1GPA_TxnOut_PlayerNotAtPicture_posSpin_BodyStuff2() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodMild, eArmsEmphType_atSide,
			startWith, -1,	eGazeType_avert, eSpriteID_cabinet, eFEBase_serious);
	with (priority_modifier 2) subgoal SetMood(eMood_anxious, eMoodStrength_low, -1, 0); 
	subgoal DoDialog(70, true, etripScript_vocalSound_sigh_little);
}

joint parallel behavior bRMt1GPA_TxnOut_PlayerNotAtPicture_posSpin_BodyStuff3() { teammembers Trip Grace; 
	precondition { StoryMemory	(BeatFlagWME sVal == "bRMt1_StartedGuessingGame") }

	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodMild, eArmsEmphType_atSide,
			startWith, -1,	eGazeType_normal, eSpriteID_italyPicture, eFEBase_serious);
	with (priority_modifier 2) subgoal SetMood(eMood_anxious, eMoodStrength_low, -1, 0); 
	subgoal bRMt1GPA_TxnOut_PlayerNotAtPicture_posSpin_BodyStuff3_seq();
}
sequential behavior bRMt1GPA_TxnOut_PlayerNotAtPicture_posSpin_BodyStuff3_seq() {
	subgoal WaitFor(0.5f);
	subgoal DoDialog(70, true, etripScript_dialog_RMT1GPA_TO_HIMSELF_romance_it_says_romance);
}


joint parallel behavior bRMt1GPA_TxnOut_PlayerNotAtPicture_posSpin_BodyStuff5() { teammembers Trip Grace; 
	precondition {	(ObjectPositionWME objectID == grace  x :: graceX  z :: graceZ)	// if player is close to Grace
					(ObjectPositionWME objectID == player  x :: playerX  z :: playerZ)
					(Staging.getXZDistanceBetweenPoints(graceX, graceZ, playerX, playerZ) < 75.0f) }

	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodMild, eArmsEmphType_atSide,
			eDcue_DialogBegin, spouse,	eGazeType_eyesOnly, eSpriteID_cabinet,	-1, 
			eDcue_DialogUnderway, spouse, -1, -1,					eFEBase_serious);
	succeed_step; //fixme remove when it's safe to have no non-effect_only steps in a behavior 
}


// ## negative spin
sequential behavior bRMt1GPA_TxnOut_PlayerNotAtPicture_Body() {
	precondition {	{ BeatMemory argWME = (BeatArgumentWME bPositiveSpin == false) }
					{ StoryMemory beatRMp1WME = (BeatRMp1WME) } }
	subgoal SetDeflectModeReest(grace, -1, egraceScript_dialog_RMT1N_INTERRUPTED_y__yes_well_trip_can_get_overly_obsessed,
									eFEBase_serious, eMood_neutral, eFEBase_skeptical, eMood_angry, eFEBase_serious, eMood_angry,
									-1, false);
	joint subgoal bRMt1GPA_TxnOut_PlayerNotAtPicture_negSpin_BodyStuff();
}

// ## negative spin
sequential behavior bRMt1GPA_TxnOut_PlayerNotAtPicture_p2_Body() {
	precondition {	{ BeatMemory argWME = (BeatArgumentWME bPositiveSpin == false) }
					{ StoryMemory beatRMp1WME = (BeatRMp1WME) } }
	subgoal SetDeflectModeReest(grace, -1, egraceScript_dialog_RMT1N_INTERRUPTED_y__yes_no_it_was_just_a_weekend_getaway,
									eFEBase_serious, eMood_neutral, eFEBase_skeptical, eMood_angry, eFEBase_serious, eMood_angry,
									-1, false);
	mental_act { beatRMp1WME.setTempMillis(System.currentTimeMillis()); }	// remember this point in time
	with (ignore_failure) joint subgoal bRMt1GPA_TxnOut_PlayerNotAtPicture_negSpin_BodyStuff2();
	with (ignore_failure) joint subgoal bRMt1GPA_TxnOut_PlayerNotAtPicture_negSpin_BodyStuff3();
	joint subgoal bRMt1GPA_TxnOut_PlayerNotAtPicture_negSpin_BodyStuff4();
	with (ignore_failure) joint subgoal bRMt1GPA_TxnOut_PlayerNotAtPicture_negSpin_BodyStuff5();
}

// ## negative spin
sequential behavior bRMt1GPA_TxnOut_PlayerNotAtPicture_p3_Body() {
	precondition {	{ BeatMemory argWME = (BeatArgumentWME bPositiveSpin == false) }
					{ StoryMemory beatRMp1WME = (BeatRMp1WME) } }
	subgoal SetDeflectModeReest(grace, -1, egraceScript_dialog_RMT1N_INTERRUPTED_y__yes_well_oh_never_mind_it_was_a_mess,
									eFEBase_serious, eMood_neutral, eFEBase_skeptical, eMood_angry, eFEBase_serious, eMood_angry,
									-1, false);
	with (ignore_failure) joint subgoal bRMt1GPA_TxnOut_PlayerNotAtPicture_negSpin_BodyStuff7();
	with (ignore_failure) joint subgoal bRMt1GPA_TxnOut_PlayerNotAtPicture_negSpin_BodyStuff8();
	with (ignore_failure) joint subgoal bRMt1GPA_TxnOut_PlayerNotAtPicture_negSpin_BodyStuff9();
	with (ignore_failure) joint subgoal bRMt1GPA_TxnOut_PlayerNotAtPicture_negSpin_BodyStuff10();
}

joint parallel behavior bRMt1GPA_TxnOut_PlayerNotAtPicture_negSpin_BodyStuff() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodMild, eArmsEmphType_atSide,
			startWith, -1,	eGazeType_normal, player, eFEBase_serious);
	with (priority_modifier 2) subgoal SetMood(eMood_anxious, eMoodStrength_low, -1, 0); 
	succeed_step; //fixme remove when it's safe to have no non-effect_only steps in a behavior 
}

joint parallel behavior bRMt1GPA_TxnOut_PlayerNotAtPicture_negSpin_BodyStuff2() { teammembers Trip Grace; 
	precondition { StoryMemory	!(BeatFlagWME sVal == "bRMt1_StartedGuessingGame")
								!(BeatFlagWME sVal == "bRMt1_MentionedSecondHoneymoon") } 

	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodMild, eArmsEmphType_atSide,
			startWith, -1,	eGazeType_normal, me, eFEBase_serious);
	with (priority_modifier 2) subgoal SetMood(eMood_anxious, eMoodStrength_low, -1, 0); 
	subgoal bRMt1GPA_TxnOut_PlayerNotAtPicture_negSpin_BodyStuff2_seq();
}
sequential behavior bRMt1GPA_TxnOut_PlayerNotAtPicture_negSpin_BodyStuff2_seq() {
	subgoal WaitFor(1);
	subgoal DoDialog(70, true, etripScript_vocalSound_sigh_little,
						etripScript_dialog_RMT1GPA_SIGH_TO_NO_ONE_IN_PARTICULAR_the_thing_is_you_see_this_trip_to_italy_was_actually_our_second_honeymoon);
	mental_act {
		ProvocativeContentArchive.archive.AddContent(eProvocativeContentType_SpecificRedHotEvent, 
														eProvocativeContentParam_Trip_says_Italy_was_meant_to_be_second_honeymoon_Grace_says_it_was_just_a_weekend_getaway,
														grace,
														eBackstoryCategory_Admitting_that_theyve_had_an_unhappy_marriage_RM,
														eBackstoryCategory_Grace_has_disconnected_herself_from_Trip_always_seems_unsatisfied_distant_even_when_Trip_tries_to_reach_out_RM,
														eBackstoryCategory_Grace_feels_controlled_by_everyone_in_her_life_particularly_Trip_Trip_thinks_he_is_helping_her_AA_RM);
		ProvocativeContentArchive.archive.AddContent(eProvocativeContentType_SpecificRedHotEvent, 
														eProvocativeContentParam_Trip_says_Italy_was_meant_to_be_second_honeymoon_Grace_says_it_was_just_a_weekend_getaway,
														trip,
														eBackstoryCategory_Admitting_that_theyve_had_an_unhappy_marriage_RM,
														eBackstoryCategory_Grace_has_disconnected_herself_from_Trip_always_seems_unsatisfied_distant_even_when_Trip_tries_to_reach_out_RM,
														eBackstoryCategory_Grace_feels_controlled_by_everyone_in_her_life_particularly_Trip_Trip_thinks_he_is_helping_her_AA_RM);
	}
}

joint parallel behavior bRMt1GPA_TxnOut_PlayerNotAtPicture_negSpin_BodyStuff3() { teammembers Trip Grace; 
	precondition { StoryMemory	!(BeatFlagWME sVal == "bRMt1_StartedGuessingGame")
								!(BeatFlagWME sVal == "bRMt1_MentionedSecondHoneymoon") } 

	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodMild, eArmsEmphType_atSide,
			eDcue_DialogBegin, spouse,	eGazeType_eyesOnly, eSpriteID_cabinet,	-1, 
			eDcue_DialogUnderway, spouse, -1, -1,					eFEBase_serious);
	with (priority_modifier 2, team_effect_only)
		subgoal SetMoodAtDialogCue(eDcue_DialogUnderway, spouse, eMood_anxious, eMoodStrength_low, -1, 0); 
	succeed_step; //fixme remove when it's safe to have no non-effect_only steps in a behavior 
}

joint parallel behavior bRMt1GPA_TxnOut_PlayerNotAtPicture_negSpin_BodyStuff4() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodMild, eArmsEmphType_atSide,
			startWith, -1,	eGazeType_normal, me, eFEBase_serious);
	with (priority_modifier 2) subgoal SetMood(eMood_anxious, eMoodStrength_low, -1, 0); 
	subgoal DoDialog(70, true, etripScript_dialog_RMT1GPA_FRUSTRATED_SIGH_uhh);
}

joint parallel behavior bRMt1GPA_TxnOut_PlayerNotAtPicture_negSpin_BodyStuff5() { teammembers Trip Grace; 
	precondition { StoryMemory	(BeatFlagWME sVal == "bRMt1_StartedGuessingGame") }

	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodMild, eArmsEmphType_atSide,
			startWith, -1,	eGazeType_normal, eSpriteID_italyPicture, eFEBase_serious);
	with (priority_modifier 2) subgoal SetMood(eMood_anxious, eMoodStrength_low, -1, 0); 
	subgoal bRMt1GPA_TxnOut_PlayerNotAtPicture_negSpin_BodyStuff5_seq();
}
sequential behavior bRMt1GPA_TxnOut_PlayerNotAtPicture_negSpin_BodyStuff5_seq() {
	subgoal WaitFor(0.5f);
	subgoal DoDialog(70, true, etripScript_dialog_RMT1GPA_TO_HIMSELF_FRUSTRATED_romance_it_says_romance);
}

joint parallel behavior bRMt1GPA_TxnOut_PlayerNotAtPicture_negSpin_BodyStuff7() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodMild, eArmsEmphType_atSide,
			eDcue_DialogBegin, spouse,	eGazeType_normal, eSpriteID_italyPicture,	-1, 
			eDcue_DialogUnderway, spouse, -1, -1,					eFEBase_serious);
	with (priority_modifier 2, team_effect_only)
		subgoal SetMoodAtDialogCue(eDcue_DialogUnderway, spouse, eMood_anxious, eMoodStrength_low, -1, 0); 
	succeed_step; //fixme remove when it's safe to have no non-effect_only steps in a behavior 
}

joint parallel behavior bRMt1GPA_TxnOut_PlayerNotAtPicture_negSpin_BodyStuff8() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodMild, eArmsEmphType_atSide,
			startWith, -1,	eGazeType_normal, me, eFEBase_serious);
	with (priority_modifier 2) subgoal SetMood(eMood_anxious, eMoodStrength_low, -1, 0); 
	subgoal WaitFor(0.5f);
}

joint parallel behavior bRMt1GPA_TxnOut_PlayerNotAtPicture_negSpin_BodyStuff9() { teammembers Trip Grace; 
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodMild, eArmsEmphType_atSide,
			eDcue_DialogBegin, spouse,	eGazeType_normal, eSpriteID_italyPicture,	-1, 
			eDcue_DialogUnderway, spouse, -1, -1,					eFEBase_serious);
	with (priority_modifier 2, team_effect_only)
		subgoal SetMoodAtDialogCue(eDcue_DialogUnderway, spouse, eMood_anxious, eMoodStrength_low, -1, 0); 
	succeed_step; //fixme remove when it's safe to have no non-effect_only steps in a behavior 
}

joint parallel behavior bRMt1GPA_TxnOut_PlayerNotAtPicture_negSpin_BodyStuff10() { teammembers Trip Grace; 
	precondition {	(ObjectPositionWME objectID == grace  x :: graceX  z :: graceZ)	// if player is close to Grace
					(ObjectPositionWME objectID == player  x :: playerX  z :: playerZ)
					(Staging.getXZDistanceBetweenPoints(graceX, graceZ, playerX, playerZ) < 75.0f) 
					{ StoryMemory (BeatFlagWME sVal == "bRMt1_PlayerWasInvitedToCouch") } }
					
	with (persistent, team_effect_only) subgoal TryToKeepFacingSprite(0, player);
	with (priority_modifier 1, ignore_failure, team_effect_only)
		subgoal SetPerformanceInfo(40, 2, eHeadEmphType_nodMild, eArmsEmphType_atSide,
			eDcue_DialogBegin, spouse,	eGazeType_normal, eSpriteID_cabinet,	-1, 
			eDcue_DialogUnderway, spouse, -1, -1,					eFEBase_serious);
	with (priority_modifier 2, team_effect_only)
		subgoal SetMoodAtDialogCue(eDcue_DialogUnderway, spouse, eMood_anxious, eMoodStrength_low, -1, 0); 
	succeed_step; //fixme remove when it's safe to have no non-effect_only steps in a behavior 
}


