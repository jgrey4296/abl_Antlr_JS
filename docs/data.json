{
    "project": {
        "name": "Abl.js",
        "description": "An Antlr based approach to ABL",
        "version": "0.0.1",
        "url": "http://www.github/com/jgrey4296/abl_Antlr_JS"
    },
    "files": {
        "js/unitTests/ABLVariableDeclarationTests.js": {
            "name": "js/unitTests/ABLVariableDeclarationTests.js",
            "modules": {},
            "classes": {
                "UnitTests.ABLVariableDeclarationTests": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/unitTests/ABL_TEST_TEMPLATE.js": {
            "name": "js/unitTests/ABL_TEST_TEMPLATE.js",
            "modules": {},
            "classes": {
                "UnitTests.TEMPLATE": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/unitTests/AblExpressionTests.js": {
            "name": "js/unitTests/AblExpressionTests.js",
            "modules": {},
            "classes": {
                "UnitTests.ablExpressionTests": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/unitTests/AblLiteralTests.js": {
            "name": "js/unitTests/AblLiteralTests.js",
            "modules": {},
            "classes": {
                "UnitTests.ablLiteralTests": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/unitTests/PropertyDeclarationTests.js": {
            "name": "js/unitTests/PropertyDeclarationTests.js",
            "modules": {},
            "classes": {
                "UnitTests.propertyDeclarationTests": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/unitTests/TeamNeededTests.js": {
            "name": "js/unitTests/TeamNeededTests.js",
            "modules": {},
            "classes": {
                "UnitTests.teamNeededForSuccessTests": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/unitTests/TestExpressionTests.js": {
            "name": "js/unitTests/TestExpressionTests.js",
            "modules": {
                "ABLModule": 1
            },
            "classes": {
                "UnitTests.testExpressionTests": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/unitTests/WMEDeclarationTests.js": {
            "name": "js/unitTests/WMEDeclarationTests.js",
            "modules": {},
            "classes": {
                "UnitTests.wmeDeclarationTests": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/unitTests/WMERegistrationTests.js": {
            "name": "js/unitTests/WMERegistrationTests.js",
            "modules": {},
            "classes": {
                "UnitTests.WMERegistrationTests": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/unitTests/WMETestTest.js": {
            "name": "js/unitTests/WMETestTest.js",
            "modules": {
                "UnitTests": 1
            },
            "classes": {
                "UnitTests.wmeTestTest": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/unitTests/WmeFieldTestTests.js": {
            "name": "js/unitTests/WmeFieldTestTests.js",
            "modules": {},
            "classes": {
                "UnitTests.wmeFieldTestTests": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/unitTests/actionRegistrationTests.js": {
            "name": "js/unitTests/actionRegistrationTests.js",
            "modules": {},
            "classes": {
                "UnitTests.actionRegistrationTests": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/unitTests/conflictDeclarationTests.js": {
            "name": "js/unitTests/conflictDeclarationTests.js",
            "modules": {},
            "classes": {
                "UnitTests.conflictDeclarationTests": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/unitTests/constantDeclarationTests.js": {
            "name": "js/unitTests/constantDeclarationTests.js",
            "modules": {},
            "classes": {
                "UnitTests.constantDeclarationTests": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/unitTests/importDeclarationTests.js": {
            "name": "js/unitTests/importDeclarationTests.js",
            "modules": {},
            "classes": {
                "UnitTests.importDeclarationTests": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/unitTests/packageTest.js": {
            "name": "js/unitTests/packageTest.js",
            "modules": {},
            "classes": {
                "UnitTests.packageImportTests": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/unitTests/paramsTest.js": {
            "name": "js/unitTests/paramsTest.js",
            "modules": {},
            "classes": {
                "UnitTests.paramsTests": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/unitTests/preconditionTests.js": {
            "name": "js/unitTests/preconditionTests.js",
            "modules": {},
            "classes": {
                "UnitTests.preconditionTests": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/unitTests/unitTests.js": {
            "name": "js/unitTests/unitTests.js",
            "modules": {},
            "classes": {
                "UnitTests.throwErrorTests": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/unitTests/wmeTestSequenceTests.js": {
            "name": "js/unitTests/wmeTestSequenceTests.js",
            "modules": {},
            "classes": {
                "UnitTests.wmeTestSequenceTests": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/ABLModule.js": {
            "name": "js/ABLModule.js",
            "modules": {
                "ABLParser": 1
            },
            "classes": {
                "Parser": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/JGListener.js": {
            "name": "js/JGListener.js",
            "modules": {},
            "classes": {
                "JGListener": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/nodeMain.js": {
            "name": "js/nodeMain.js",
            "modules": {
                "example": 1
            },
            "classes": {
                "nodeMain": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "ABLParser": {
            "name": "ABLParser",
            "submodules": {
                "UnitTests": 1,
                "example": 1
            },
            "classes": {
                "UnitTests.ABLVariableDeclarationTests": 1,
                "UnitTests.TEMPLATE": 1,
                "UnitTests.ablExpressionTests": 1,
                "UnitTests.ablLiteralTests": 1,
                "UnitTests.propertyDeclarationTests": 1,
                "UnitTests.teamNeededForSuccessTests": 1,
                "UnitTests.wmeDeclarationTests": 1,
                "UnitTests.wmeFieldTestTests": 1,
                "UnitTests.actionRegistrationTests": 1,
                "UnitTests.conflictDeclarationTests": 1,
                "UnitTests.constantDeclarationTests": 1,
                "UnitTests.importDeclarationTests": 1,
                "UnitTests.packageImportTests": 1,
                "UnitTests.paramsTests": 1,
                "UnitTests.preconditionTests": 1,
                "UnitTests.throwErrorTests": 1,
                "UnitTests.wmeTestSequenceTests": 1,
                "Parser": 1,
                "JGListener": 1,
                "nodeMain": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "js/nodeMain.js",
            "line": 6
        },
        "UnitTests": {
            "name": "UnitTests",
            "submodules": {},
            "classes": {
                "UnitTests.ABLVariableDeclarationTests": 1,
                "UnitTests.TEMPLATE": 1,
                "UnitTests.ablExpressionTests": 1,
                "UnitTests.ablLiteralTests": 1,
                "UnitTests.propertyDeclarationTests": 1,
                "UnitTests.teamNeededForSuccessTests": 1,
                "UnitTests.testExpressionTests": 1,
                "UnitTests.wmeDeclarationTests": 1,
                "UnitTests.WMERegistrationTests": 1,
                "UnitTests.wmeTestTest": 1,
                "UnitTests.wmeFieldTestTests": 1,
                "UnitTests.actionRegistrationTests": 1,
                "UnitTests.conflictDeclarationTests": 1,
                "UnitTests.constantDeclarationTests": 1,
                "UnitTests.importDeclarationTests": 1,
                "UnitTests.packageImportTests": 1,
                "UnitTests.paramsTests": 1,
                "UnitTests.preconditionTests": 1,
                "UnitTests.throwErrorTests": 1,
                "UnitTests.wmeTestSequenceTests": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "ABLParser",
            "namespace": "",
            "file": "js/unitTests/wmeTestSequenceTests.js",
            "line": 7,
            "description": "Tests relating to the Variable Declarations,\nSuch as \"String Test;\"",
            "tag": "module"
        },
        "ABLModule": {
            "name": "ABLModule",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "js/unitTests/TestExpressionTests.js",
            "line": 1
        },
        "example": {
            "name": "example",
            "submodules": {},
            "classes": {
                "nodeMain": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "ABLParser",
            "namespace": "",
            "file": "js/nodeMain.js",
            "line": 6,
            "description": "An example Node based use of the ABLParser"
        }
    },
    "classes": {
        "UnitTests.ABLVariableDeclarationTests": {
            "name": "UnitTests.ABLVariableDeclarationTests",
            "shortname": "UnitTests.ABLVariableDeclarationTests",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ABLParser",
            "submodule": "UnitTests",
            "namespace": "",
            "file": "js/unitTests/ABLVariableDeclarationTests.js",
            "line": 8,
            "description": "Tests relating to the Variable Declarations,\nSuch as \"String Test;\""
        },
        "UnitTests.TEMPLATE": {
            "name": "UnitTests.TEMPLATE",
            "shortname": "UnitTests.TEMPLATE",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ABLParser",
            "submodule": "UnitTests",
            "namespace": "",
            "file": "js/unitTests/ABL_TEST_TEMPLATE.js",
            "line": 7,
            "description": "A Template Unit Test for parsing"
        },
        "UnitTests.ablExpressionTests": {
            "name": "UnitTests.ablExpressionTests",
            "shortname": "UnitTests.ablExpressionTests",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ABLParser",
            "submodule": "UnitTests",
            "namespace": "",
            "file": "js/unitTests/AblExpressionTests.js",
            "line": 8,
            "description": "Tests ABL Expression,\nSuch as \"Test\""
        },
        "UnitTests.ablLiteralTests": {
            "name": "UnitTests.ablLiteralTests",
            "shortname": "UnitTests.ablLiteralTests",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ABLParser",
            "submodule": "UnitTests",
            "namespace": "",
            "file": "js/unitTests/AblLiteralTests.js",
            "line": 7,
            "description": "Tests the parsing of literals"
        },
        "UnitTests.propertyDeclarationTests": {
            "name": "UnitTests.propertyDeclarationTests",
            "shortname": "UnitTests.propertyDeclarationTests",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ABLParser",
            "submodule": "UnitTests",
            "namespace": "",
            "file": "js/unitTests/PropertyDeclarationTests.js",
            "line": 7,
            "description": "Checks property declarations,\nof the form \"property String Test;\""
        },
        "UnitTests.teamNeededForSuccessTests": {
            "name": "UnitTests.teamNeededForSuccessTests",
            "shortname": "UnitTests.teamNeededForSuccessTests",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ABLParser",
            "submodule": "UnitTests",
            "namespace": "",
            "file": "js/unitTests/TeamNeededTests.js",
            "line": 7,
            "description": "Performs tests on team needed statements"
        },
        "UnitTests.testExpressionTests": {
            "name": "UnitTests.testExpressionTests",
            "shortname": "UnitTests.testExpressionTests",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "UnitTests",
            "namespace": "",
            "file": "js/unitTests/TestExpressionTests.js",
            "line": 7,
            "description": "Checks the parsing of test expressions"
        },
        "UnitTests.wmeDeclarationTests": {
            "name": "UnitTests.wmeDeclarationTests",
            "shortname": "UnitTests.wmeDeclarationTests",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ABLParser",
            "submodule": "UnitTests",
            "namespace": "",
            "file": "js/unitTests/WMEDeclarationTests.js",
            "line": 7
        },
        "UnitTests.WMERegistrationTests": {
            "name": "UnitTests.WMERegistrationTests",
            "shortname": "UnitTests.WMERegistrationTests",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "UnitTests",
            "namespace": "",
            "file": "js/unitTests/WMERegistrationTests.js",
            "line": 7,
            "description": "Test WME Registration Statements"
        },
        "UnitTests.wmeTestTest": {
            "name": "UnitTests.wmeTestTest",
            "shortname": "UnitTests.wmeTestTest",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "UnitTests",
            "namespace": "",
            "file": "js/unitTests/WMETestTest.js",
            "line": 7,
            "description": "Checks WMETests"
        },
        "UnitTests.wmeFieldTestTests": {
            "name": "UnitTests.wmeFieldTestTests",
            "shortname": "UnitTests.wmeFieldTestTests",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ABLParser",
            "submodule": "UnitTests",
            "namespace": "",
            "file": "js/unitTests/WmeFieldTestTests.js",
            "line": 7,
            "description": "Tests the grammar construct of wmeFieldTest"
        },
        "UnitTests.actionRegistrationTests": {
            "name": "UnitTests.actionRegistrationTests",
            "shortname": "UnitTests.actionRegistrationTests",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ABLParser",
            "submodule": "UnitTests",
            "namespace": "",
            "file": "js/unitTests/actionRegistrationTests.js",
            "line": 7,
            "description": "Tests actionRegistrations"
        },
        "UnitTests.conflictDeclarationTests": {
            "name": "UnitTests.conflictDeclarationTests",
            "shortname": "UnitTests.conflictDeclarationTests",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ABLParser",
            "submodule": "UnitTests",
            "namespace": "",
            "file": "js/unitTests/conflictDeclarationTests.js",
            "line": 7,
            "description": "Tests conflict declarations"
        },
        "UnitTests.constantDeclarationTests": {
            "name": "UnitTests.constantDeclarationTests",
            "shortname": "UnitTests.constantDeclarationTests",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ABLParser",
            "submodule": "UnitTests",
            "namespace": "",
            "file": "js/unitTests/constantDeclarationTests.js",
            "line": 9,
            "description": "Tests for constant declarations"
        },
        "UnitTests.importDeclarationTests": {
            "name": "UnitTests.importDeclarationTests",
            "shortname": "UnitTests.importDeclarationTests",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ABLParser",
            "submodule": "UnitTests",
            "namespace": "",
            "file": "js/unitTests/importDeclarationTests.js",
            "line": 9,
            "description": "Checks that import statements work"
        },
        "UnitTests.packageImportTests": {
            "name": "UnitTests.packageImportTests",
            "shortname": "UnitTests.packageImportTests",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ABLParser",
            "submodule": "UnitTests",
            "namespace": "",
            "file": "js/unitTests/packageTest.js",
            "line": 7,
            "description": "Verify the behaviour of package imports"
        },
        "UnitTests.paramsTests": {
            "name": "UnitTests.paramsTests",
            "shortname": "UnitTests.paramsTests",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ABLParser",
            "submodule": "UnitTests",
            "namespace": "",
            "file": "js/unitTests/paramsTest.js",
            "line": 7,
            "description": "Tests parameter declarations"
        },
        "UnitTests.preconditionTests": {
            "name": "UnitTests.preconditionTests",
            "shortname": "UnitTests.preconditionTests",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ABLParser",
            "submodule": "UnitTests",
            "namespace": "",
            "file": "js/unitTests/preconditionTests.js",
            "line": 7,
            "description": "Test the Precondition Construct"
        },
        "UnitTests.throwErrorTests": {
            "name": "UnitTests.throwErrorTests",
            "shortname": "UnitTests.throwErrorTests",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ABLParser",
            "submodule": "UnitTests",
            "namespace": "",
            "file": "js/unitTests/unitTests.js",
            "line": 7,
            "description": "Verify that the ABLModule throws basic errors"
        },
        "UnitTests.wmeTestSequenceTests": {
            "name": "UnitTests.wmeTestSequenceTests",
            "shortname": "UnitTests.wmeTestSequenceTests",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ABLParser",
            "submodule": "UnitTests",
            "namespace": "",
            "file": "js/unitTests/wmeTestSequenceTests.js",
            "line": 7,
            "description": "Check wmeTestSequence construct"
        },
        "Parser": {
            "name": "Parser",
            "shortname": "Parser",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ABLParser",
            "namespace": "",
            "file": "js/ABLModule.js",
            "line": 51,
            "description": "Wraps up the parser into an easy to use function",
            "static": 1
        },
        "JGListener": {
            "name": "JGListener",
            "shortname": "JGListener",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ABLParser",
            "namespace": "",
            "file": "js/JGListener.js",
            "line": 6,
            "description": "The JGListener constructor",
            "is_constructor": 1
        },
        "nodeMain": {
            "name": "nodeMain",
            "shortname": "nodeMain",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ABLParser",
            "submodule": "example",
            "namespace": "",
            "file": "js/nodeMain.js",
            "line": 6,
            "description": "An example Node based use of the ABLParser"
        }
    },
    "classitems": [
        {
            "file": "js/unitTests/ABLVariableDeclarationTests.js",
            "line": 15,
            "description": "Tests the simplest possible variable declaration",
            "itemtype": "method",
            "name": "simpleDeclaration",
            "class": "UnitTests.ABLVariableDeclarationTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/ABLVariableDeclarationTests.js",
            "line": 32,
            "description": "Test for multiple variable declarations performed at once",
            "itemtype": "method",
            "name": "multipleDeclaration",
            "class": "UnitTests.ABLVariableDeclarationTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/ABL_TEST_TEMPLATE.js",
            "line": 13,
            "description": "A stub test",
            "itemtype": "method",
            "name": "stub",
            "class": "UnitTests.TEMPLATE",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/AblExpressionTests.js",
            "line": 15,
            "description": "The simplest possible expression",
            "itemtype": "method",
            "name": "simple",
            "class": "UnitTests.ablExpressionTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/AblExpressionTests.js",
            "line": 31,
            "description": "Tests for recognition of simple literals",
            "itemtype": "method",
            "name": "simpleLiteral",
            "class": "UnitTests.ablExpressionTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/AblLiteralTests.js",
            "line": 13,
            "description": "Initial Smoke Test",
            "itemtype": "method",
            "name": "simpleLiteral",
            "class": "UnitTests.ablLiteralTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/PropertyDeclarationTests.js",
            "line": 14,
            "description": "Initial Smoke Test",
            "itemtype": "method",
            "name": "simpleDeclaration",
            "class": "UnitTests.propertyDeclarationTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/TeamNeededTests.js",
            "line": 13,
            "description": "Initial Smoke Test",
            "itemtype": "method",
            "name": "simpleTeamNeeded",
            "class": "UnitTests.teamNeededForSuccessTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/TeamNeededTests.js",
            "line": 30,
            "description": "Tests 'One_needed_for_success'",
            "itemtype": "method",
            "name": "simpleOneNeeded",
            "class": "UnitTests.teamNeededForSuccessTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/TestExpressionTests.js",
            "line": 13,
            "description": "Initial Smoke Test",
            "itemtype": "method",
            "name": "simple",
            "todo": [
                ""
            ],
            "class": "UnitTests.testExpressionTests",
            "module": "UnitTests"
        },
        {
            "file": "js/unitTests/WMEDeclarationTests.js",
            "line": 12,
            "description": "Initial Smoke Test",
            "itemtype": "method",
            "name": "simpleWMEDeclaration",
            "class": "UnitTests.wmeDeclarationTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/WMEDeclarationTests.js",
            "line": 29,
            "description": "Tests extension / inheritance of wmes",
            "itemtype": "method",
            "name": "extensionTest",
            "class": "UnitTests.wmeDeclarationTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/WMEDeclarationTests.js",
            "line": 49,
            "description": "Checks that WMEs can have fields",
            "itemtype": "method",
            "name": "variablesTest",
            "class": "UnitTests.wmeDeclarationTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/WMERegistrationTests.js",
            "line": 13,
            "description": "Initial Smoke Test",
            "itemtype": "method",
            "name": "simpleRegistration",
            "class": "UnitTests.WMERegistrationTests",
            "module": "UnitTests"
        },
        {
            "file": "js/unitTests/WMERegistrationTests.js",
            "line": 29,
            "description": "Check multiple wmes can be defined in a row",
            "itemtype": "method",
            "name": "multipleRegistrations",
            "class": "UnitTests.WMERegistrationTests",
            "module": "UnitTests"
        },
        {
            "file": "js/unitTests/WMERegistrationTests.js",
            "line": 48,
            "description": "Test what happens if a non-critical keyword is misspelled",
            "itemtype": "method",
            "name": "misspelledRegistration",
            "class": "UnitTests.WMERegistrationTests",
            "module": "UnitTests"
        },
        {
            "file": "js/unitTests/WMERegistrationTests.js",
            "line": 66,
            "description": "Test what happens when a wme is not defined fully",
            "itemtype": "method",
            "name": "incompleteTest",
            "class": "UnitTests.WMERegistrationTests",
            "module": "UnitTests"
        },
        {
            "file": "js/unitTests/WMETestTest.js",
            "line": 13,
            "description": "initial smoke test",
            "itemtype": "method",
            "name": "simple",
            "class": "UnitTests.wmeTestTest",
            "module": "UnitTests"
        },
        {
            "file": "js/unitTests/WmeFieldTestTests.js",
            "line": 13,
            "description": "initial smoke test",
            "itemtype": "method",
            "name": "simple",
            "class": "UnitTests.wmeFieldTestTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/actionRegistrationTests.js",
            "line": 13,
            "description": "Initial Smoke Test",
            "itemtype": "method",
            "name": "simpleActionRegistration",
            "class": "UnitTests.actionRegistrationTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/actionRegistrationTests.js",
            "line": 30,
            "description": "Check that actions can be registered with parameters",
            "itemtype": "method",
            "name": "withParamsTest",
            "class": "UnitTests.actionRegistrationTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/conflictDeclarationTests.js",
            "line": 13,
            "description": "Initial Smoke Test",
            "itemtype": "method",
            "name": "simpleDeclaration",
            "class": "UnitTests.conflictDeclarationTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/conflictDeclarationTests.js",
            "line": 31,
            "description": "Test declaration of lists of conflicts",
            "itemtype": "method",
            "name": "multipleDeclaration",
            "class": "UnitTests.conflictDeclarationTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/constantDeclarationTests.js",
            "line": 15,
            "description": "Simple Smoke Test",
            "itemtype": "method",
            "name": "simpleConstantDeclaration",
            "class": "UnitTests.constantDeclarationTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/constantDeclarationTests.js",
            "line": 30,
            "description": "Test if constants can be values in objects?",
            "itemtype": "method",
            "name": "simpleDotTest",
            "class": "UnitTests.constantDeclarationTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/constantDeclarationTests.js",
            "line": 47,
            "description": "Test that multiple constants can be defined in a row",
            "itemtype": "method",
            "name": "multipleDecTest",
            "class": "UnitTests.constantDeclarationTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/constantDeclarationTests.js",
            "line": 68,
            "description": "Verify what happens if a keyword is misspelled",
            "itemtype": "method",
            "name": "misspelledTest",
            "class": "UnitTests.constantDeclarationTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/importDeclarationTests.js",
            "line": 15,
            "description": "Initial Smoke Test",
            "itemtype": "method",
            "name": "simpleImport",
            "class": "UnitTests.importDeclarationTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/importDeclarationTests.js",
            "line": 30,
            "description": "Check that imports can be subpackages",
            "itemtype": "method",
            "name": "simpleDotImport",
            "class": "UnitTests.importDeclarationTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/importDeclarationTests.js",
            "line": 46,
            "description": "check that imports can be arbitrary length subpackages",
            "itemtype": "method",
            "name": "repeatedDotImport",
            "class": "UnitTests.importDeclarationTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/importDeclarationTests.js",
            "line": 62,
            "description": "Check that imports can cover everything in a package\nusing *",
            "itemtype": "method",
            "name": "starredImport",
            "class": "UnitTests.importDeclarationTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/importDeclarationTests.js",
            "line": 78,
            "description": "Check that multiple packages can be imported in a row",
            "itemtype": "method",
            "name": "multipleImports",
            "class": "UnitTests.importDeclarationTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/importDeclarationTests.js",
            "line": 97,
            "description": "Check that if no value is specified to import,\nnothing is imported",
            "itemtype": "method",
            "name": "failOnNoImport",
            "class": "UnitTests.importDeclarationTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/importDeclarationTests.js",
            "line": 111,
            "description": "Verify what happens when a keyword is misspelled",
            "itemtype": "method",
            "name": "failOnMispelling",
            "class": "UnitTests.importDeclarationTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/packageTest.js",
            "line": 14,
            "description": "Initial Smoke test",
            "itemtype": "method",
            "name": "simpleTest",
            "class": "UnitTests.packageImportTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/packageTest.js",
            "line": 28,
            "description": "Verify behaviour of no value specified",
            "itemtype": "method",
            "name": "noPackageFail",
            "class": "UnitTests.packageImportTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/packageTest.js",
            "line": 40,
            "description": "Verify only the first package is recorded",
            "itemtype": "method",
            "name": "multiplePackageFail",
            "class": "UnitTests.packageImportTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/packageTest.js",
            "line": 55,
            "description": "Verify behaviour of keyword being misspelled",
            "itemtype": "method",
            "name": "misspelledPackageCorrect",
            "class": "UnitTests.packageImportTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/packageTest.js",
            "line": 70,
            "description": "Verify behaviour from the 'prog' root rule",
            "itemtype": "method",
            "name": "progTest",
            "class": "UnitTests.packageImportTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/paramsTest.js",
            "line": 13,
            "description": "Initial Smoke Test",
            "itemtype": "method",
            "name": "simpleParameters",
            "class": "UnitTests.paramsTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/paramsTest.js",
            "line": 30,
            "description": "Check that multiple parameters can be declared at once",
            "itemtype": "method",
            "name": "multipleParams",
            "class": "UnitTests.paramsTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/paramsTest.js",
            "line": 48,
            "description": "Verify what happens with an empty param list",
            "itemtype": "method",
            "name": "emptyParams",
            "class": "UnitTests.paramsTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/unitTests.js",
            "line": 13,
            "description": "Check that an error is throw when a nonexistent rule\nis passed to the parse function",
            "itemtype": "method",
            "name": "throw_Error_On_No_Start_Rule",
            "class": "UnitTests.throwErrorTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/unitTests.js",
            "line": 25,
            "description": "Check that an error is thrown on no string to parse",
            "itemtype": "method",
            "name": "throw_eror_on_no_input_text",
            "class": "UnitTests.throwErrorTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/unitTests/wmeTestSequenceTests.js",
            "line": 13,
            "description": "initial smoke test",
            "itemtype": "method",
            "name": "simple",
            "class": "UnitTests.wmeTestSequenceTests",
            "module": "ABLParser",
            "submodule": "UnitTests"
        },
        {
            "file": "js/ABLModule.js",
            "line": 11,
            "description": "The Parse Function",
            "itemtype": "method",
            "name": "parseInput",
            "params": [
                {
                    "name": "input",
                    "description": "The Input string to be parsed"
                },
                {
                    "name": "startRule",
                    "description": "The rule of the grammar to start on"
                }
            ],
            "static": "Grammar to be found in ABL.g4 and ABLTokens.g4",
            "class": "Parser",
            "module": "ABLParser"
        },
        {
            "file": "js/JGListener.js",
            "line": 26,
            "description": "Enter the root rule of the ABL Grammar\nSets up the parsedStack datastructure",
            "itemtype": "method",
            "name": "enterProg",
            "class": "JGListener",
            "module": "ABLParser"
        },
        {
            "file": "js/JGListener.js",
            "line": 35,
            "description": "Parses a package declaration",
            "itemtype": "method",
            "name": "enterG_package",
            "class": "JGListener",
            "module": "ABLParser"
        },
        {
            "file": "js/JGListener.js",
            "line": 52,
            "description": "Parses an import statement",
            "itemtype": "method",
            "name": "enterG_import",
            "class": "JGListener",
            "module": "ABLParser"
        },
        {
            "file": "js/JGListener.js",
            "line": 79,
            "description": "Parses constant declarations",
            "itemtype": "method",
            "name": "enterConstants",
            "class": "JGListener",
            "module": "ABLParser"
        },
        {
            "file": "js/JGListener.js",
            "line": 95,
            "description": "Parse team needed statements",
            "itemtype": "method",
            "name": "enterTeamNeeded",
            "class": "JGListener",
            "module": "ABLParser"
        },
        {
            "file": "js/JGListener.js",
            "line": 116,
            "description": "Parse Conflict Declarations",
            "itemtype": "method",
            "name": "enterConflictDecl",
            "class": "JGListener",
            "module": "ABLParser"
        },
        {
            "file": "js/JGListener.js",
            "line": 140,
            "description": "parse wmeRegistration",
            "itemtype": "method",
            "name": "enterWmeRegistration",
            "class": "JGListener",
            "module": "ABLParser"
        }
    ],
    "warnings": []
}